// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/debug/debug_service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tensorflow/core/debug/debug_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tensorflow {

namespace {

const ::google::protobuf::Descriptor* EventReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EventReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* EventReply_DebugOpStateChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EventReply_DebugOpStateChange_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EventReply_DebugOpStateChange_Change_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto() {
  protobuf_AddDesc_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "tensorflow/core/debug/debug_service.proto");
  GOOGLE_CHECK(file != NULL);
  EventReply_descriptor_ = file->message_type(0);
  static const int EventReply_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventReply, debug_op_state_changes_),
  };
  EventReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EventReply_descriptor_,
      EventReply::internal_default_instance(),
      EventReply_offsets_,
      -1,
      -1,
      -1,
      sizeof(EventReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventReply, _internal_metadata_));
  EventReply_DebugOpStateChange_descriptor_ = EventReply_descriptor_->nested_type(0);
  static const int EventReply_DebugOpStateChange_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventReply_DebugOpStateChange, change_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventReply_DebugOpStateChange, node_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventReply_DebugOpStateChange, output_slot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventReply_DebugOpStateChange, debug_op_),
  };
  EventReply_DebugOpStateChange_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EventReply_DebugOpStateChange_descriptor_,
      EventReply_DebugOpStateChange::internal_default_instance(),
      EventReply_DebugOpStateChange_offsets_,
      -1,
      -1,
      -1,
      sizeof(EventReply_DebugOpStateChange),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventReply_DebugOpStateChange, _internal_metadata_));
  EventReply_DebugOpStateChange_Change_descriptor_ = EventReply_DebugOpStateChange_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EventReply_descriptor_, EventReply::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EventReply_DebugOpStateChange_descriptor_, EventReply_DebugOpStateChange::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto() {
  EventReply_default_instance_.Shutdown();
  delete EventReply_reflection_;
  EventReply_DebugOpStateChange_default_instance_.Shutdown();
  delete EventReply_DebugOpStateChange_reflection_;
}

void protobuf_InitDefaults_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::tensorflow::protobuf_InitDefaults_tensorflow_2fcore_2futil_2fevent_2eproto();
  EventReply_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  EventReply_DebugOpStateChange_default_instance_.DefaultConstruct();
  EventReply_default_instance_.get_mutable()->InitAsDefaultInstance();
  EventReply_DebugOpStateChange_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto_once_);
void protobuf_InitDefaults_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto_once_,
                 &protobuf_InitDefaults_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto_impl);
}
void protobuf_AddDesc_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n)tensorflow/core/debug/debug_service.pr"
    "oto\022\ntensorflow\032 tensorflow/core/util/ev"
    "ent.proto\"\215\002\n\nEventReply\022I\n\026debug_op_sta"
    "te_changes\030\001 \003(\0132).tensorflow.EventReply"
    ".DebugOpStateChange\032\263\001\n\022DebugOpStateChan"
    "ge\022@\n\006change\030\001 \001(\01620.tensorflow.EventRep"
    "ly.DebugOpStateChange.Change\022\021\n\tnode_nam"
    "e\030\002 \001(\t\022\023\n\013output_slot\030\003 \001(\005\022\020\n\010debug_op"
    "\030\004 \001(\t\"!\n\006Change\022\013\n\007DISABLE\020\000\022\n\n\006ENABLE\020"
    "\0012L\n\rEventListener\022;\n\nSendEvents\022\021.tenso"
    "rflow.Event\032\026.tensorflow.EventReply(\0010\001b"
    "\006proto3", 447);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/debug/debug_service.proto", &protobuf_RegisterTypes);
  ::tensorflow::protobuf_AddDesc_tensorflow_2fcore_2futil_2fevent_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto_once_);
void protobuf_AddDesc_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto_once_,
                 &protobuf_AddDesc_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto {
  StaticDescriptorInitializer_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto() {
    protobuf_AddDesc_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto();
  }
} static_descriptor_initializer_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* EventReply_DebugOpStateChange_Change_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EventReply_DebugOpStateChange_Change_descriptor_;
}
bool EventReply_DebugOpStateChange_Change_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EventReply_DebugOpStateChange_Change EventReply_DebugOpStateChange::DISABLE;
const EventReply_DebugOpStateChange_Change EventReply_DebugOpStateChange::ENABLE;
const EventReply_DebugOpStateChange_Change EventReply_DebugOpStateChange::Change_MIN;
const EventReply_DebugOpStateChange_Change EventReply_DebugOpStateChange::Change_MAX;
const int EventReply_DebugOpStateChange::Change_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventReply_DebugOpStateChange::kChangeFieldNumber;
const int EventReply_DebugOpStateChange::kNodeNameFieldNumber;
const int EventReply_DebugOpStateChange::kOutputSlotFieldNumber;
const int EventReply_DebugOpStateChange::kDebugOpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventReply_DebugOpStateChange::EventReply_DebugOpStateChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.EventReply.DebugOpStateChange)
}

void EventReply_DebugOpStateChange::InitAsDefaultInstance() {
}

EventReply_DebugOpStateChange::EventReply_DebugOpStateChange(const EventReply_DebugOpStateChange& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.EventReply.DebugOpStateChange)
}

void EventReply_DebugOpStateChange::SharedCtor() {
  node_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  debug_op_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&change_, 0, reinterpret_cast<char*>(&output_slot_) -
    reinterpret_cast<char*>(&change_) + sizeof(output_slot_));
  _cached_size_ = 0;
}

EventReply_DebugOpStateChange::~EventReply_DebugOpStateChange() {
  // @@protoc_insertion_point(destructor:tensorflow.EventReply.DebugOpStateChange)
  SharedDtor();
}

void EventReply_DebugOpStateChange::SharedDtor() {
  node_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  debug_op_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EventReply_DebugOpStateChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventReply_DebugOpStateChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EventReply_DebugOpStateChange_descriptor_;
}

const EventReply_DebugOpStateChange& EventReply_DebugOpStateChange::default_instance() {
  protobuf_InitDefaults_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EventReply_DebugOpStateChange> EventReply_DebugOpStateChange_default_instance_;

EventReply_DebugOpStateChange* EventReply_DebugOpStateChange::New(::google::protobuf::Arena* arena) const {
  EventReply_DebugOpStateChange* n = new EventReply_DebugOpStateChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EventReply_DebugOpStateChange::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.EventReply.DebugOpStateChange)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(EventReply_DebugOpStateChange, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<EventReply_DebugOpStateChange*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(change_, output_slot_);
  node_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  debug_op_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool EventReply_DebugOpStateChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.EventReply.DebugOpStateChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tensorflow.EventReply.DebugOpStateChange.Change change = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_change(static_cast< ::tensorflow::EventReply_DebugOpStateChange_Change >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_node_name;
        break;
      }

      // optional string node_name = 2;
      case 2: {
        if (tag == 18) {
         parse_node_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_name().data(), this->node_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.EventReply.DebugOpStateChange.node_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_output_slot;
        break;
      }

      // optional int32 output_slot = 3;
      case 3: {
        if (tag == 24) {
         parse_output_slot:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &output_slot_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_debug_op;
        break;
      }

      // optional string debug_op = 4;
      case 4: {
        if (tag == 34) {
         parse_debug_op:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_debug_op()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->debug_op().data(), this->debug_op().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.EventReply.DebugOpStateChange.debug_op"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.EventReply.DebugOpStateChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.EventReply.DebugOpStateChange)
  return false;
#undef DO_
}

void EventReply_DebugOpStateChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.EventReply.DebugOpStateChange)
  // optional .tensorflow.EventReply.DebugOpStateChange.Change change = 1;
  if (this->change() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->change(), output);
  }

  // optional string node_name = 2;
  if (this->node_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_name().data(), this->node_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.EventReply.DebugOpStateChange.node_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->node_name(), output);
  }

  // optional int32 output_slot = 3;
  if (this->output_slot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->output_slot(), output);
  }

  // optional string debug_op = 4;
  if (this->debug_op().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->debug_op().data(), this->debug_op().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.EventReply.DebugOpStateChange.debug_op");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->debug_op(), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.EventReply.DebugOpStateChange)
}

::google::protobuf::uint8* EventReply_DebugOpStateChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.EventReply.DebugOpStateChange)
  // optional .tensorflow.EventReply.DebugOpStateChange.Change change = 1;
  if (this->change() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->change(), target);
  }

  // optional string node_name = 2;
  if (this->node_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_name().data(), this->node_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.EventReply.DebugOpStateChange.node_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->node_name(), target);
  }

  // optional int32 output_slot = 3;
  if (this->output_slot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->output_slot(), target);
  }

  // optional string debug_op = 4;
  if (this->debug_op().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->debug_op().data(), this->debug_op().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.EventReply.DebugOpStateChange.debug_op");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->debug_op(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.EventReply.DebugOpStateChange)
  return target;
}

size_t EventReply_DebugOpStateChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.EventReply.DebugOpStateChange)
  size_t total_size = 0;

  // optional .tensorflow.EventReply.DebugOpStateChange.Change change = 1;
  if (this->change() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->change());
  }

  // optional string node_name = 2;
  if (this->node_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_name());
  }

  // optional int32 output_slot = 3;
  if (this->output_slot() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->output_slot());
  }

  // optional string debug_op = 4;
  if (this->debug_op().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->debug_op());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventReply_DebugOpStateChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.EventReply.DebugOpStateChange)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EventReply_DebugOpStateChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventReply_DebugOpStateChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.EventReply.DebugOpStateChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.EventReply.DebugOpStateChange)
    UnsafeMergeFrom(*source);
  }
}

void EventReply_DebugOpStateChange::MergeFrom(const EventReply_DebugOpStateChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.EventReply.DebugOpStateChange)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EventReply_DebugOpStateChange::UnsafeMergeFrom(const EventReply_DebugOpStateChange& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.change() != 0) {
    set_change(from.change());
  }
  if (from.node_name().size() > 0) {

    node_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_name_);
  }
  if (from.output_slot() != 0) {
    set_output_slot(from.output_slot());
  }
  if (from.debug_op().size() > 0) {

    debug_op_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.debug_op_);
  }
}

void EventReply_DebugOpStateChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.EventReply.DebugOpStateChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventReply_DebugOpStateChange::CopyFrom(const EventReply_DebugOpStateChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.EventReply.DebugOpStateChange)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EventReply_DebugOpStateChange::IsInitialized() const {

  return true;
}

void EventReply_DebugOpStateChange::Swap(EventReply_DebugOpStateChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventReply_DebugOpStateChange::InternalSwap(EventReply_DebugOpStateChange* other) {
  std::swap(change_, other->change_);
  node_name_.Swap(&other->node_name_);
  std::swap(output_slot_, other->output_slot_);
  debug_op_.Swap(&other->debug_op_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EventReply_DebugOpStateChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EventReply_DebugOpStateChange_descriptor_;
  metadata.reflection = EventReply_DebugOpStateChange_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventReply::kDebugOpStateChangesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventReply::EventReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.EventReply)
}

void EventReply::InitAsDefaultInstance() {
}

EventReply::EventReply(const EventReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.EventReply)
}

void EventReply::SharedCtor() {
  _cached_size_ = 0;
}

EventReply::~EventReply() {
  // @@protoc_insertion_point(destructor:tensorflow.EventReply)
  SharedDtor();
}

void EventReply::SharedDtor() {
}

void EventReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EventReply_descriptor_;
}

const EventReply& EventReply::default_instance() {
  protobuf_InitDefaults_tensorflow_2fcore_2fdebug_2fdebug_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EventReply> EventReply_default_instance_;

EventReply* EventReply::New(::google::protobuf::Arena* arena) const {
  EventReply* n = new EventReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EventReply::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.EventReply)
  debug_op_state_changes_.Clear();
}

bool EventReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.EventReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.EventReply.DebugOpStateChange debug_op_state_changes = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_debug_op_state_changes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_debug_op_state_changes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_debug_op_state_changes;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.EventReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.EventReply)
  return false;
#undef DO_
}

void EventReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.EventReply)
  // repeated .tensorflow.EventReply.DebugOpStateChange debug_op_state_changes = 1;
  for (unsigned int i = 0, n = this->debug_op_state_changes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->debug_op_state_changes(i), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.EventReply)
}

::google::protobuf::uint8* EventReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.EventReply)
  // repeated .tensorflow.EventReply.DebugOpStateChange debug_op_state_changes = 1;
  for (unsigned int i = 0, n = this->debug_op_state_changes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->debug_op_state_changes(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.EventReply)
  return target;
}

size_t EventReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.EventReply)
  size_t total_size = 0;

  // repeated .tensorflow.EventReply.DebugOpStateChange debug_op_state_changes = 1;
  {
    unsigned int count = this->debug_op_state_changes_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->debug_op_state_changes(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.EventReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EventReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.EventReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.EventReply)
    UnsafeMergeFrom(*source);
  }
}

void EventReply::MergeFrom(const EventReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.EventReply)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EventReply::UnsafeMergeFrom(const EventReply& from) {
  GOOGLE_DCHECK(&from != this);
  debug_op_state_changes_.MergeFrom(from.debug_op_state_changes_);
}

void EventReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.EventReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventReply::CopyFrom(const EventReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.EventReply)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EventReply::IsInitialized() const {

  return true;
}

void EventReply::Swap(EventReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventReply::InternalSwap(EventReply* other) {
  debug_op_state_changes_.UnsafeArenaSwap(&other->debug_op_state_changes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EventReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EventReply_descriptor_;
  metadata.reflection = EventReply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EventReply_DebugOpStateChange

// optional .tensorflow.EventReply.DebugOpStateChange.Change change = 1;
void EventReply_DebugOpStateChange::clear_change() {
  change_ = 0;
}
::tensorflow::EventReply_DebugOpStateChange_Change EventReply_DebugOpStateChange::change() const {
  // @@protoc_insertion_point(field_get:tensorflow.EventReply.DebugOpStateChange.change)
  return static_cast< ::tensorflow::EventReply_DebugOpStateChange_Change >(change_);
}
void EventReply_DebugOpStateChange::set_change(::tensorflow::EventReply_DebugOpStateChange_Change value) {
  
  change_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.EventReply.DebugOpStateChange.change)
}

// optional string node_name = 2;
void EventReply_DebugOpStateChange::clear_node_name() {
  node_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EventReply_DebugOpStateChange::node_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.EventReply.DebugOpStateChange.node_name)
  return node_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EventReply_DebugOpStateChange::set_node_name(const ::std::string& value) {
  
  node_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.EventReply.DebugOpStateChange.node_name)
}
void EventReply_DebugOpStateChange::set_node_name(const char* value) {
  
  node_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.EventReply.DebugOpStateChange.node_name)
}
void EventReply_DebugOpStateChange::set_node_name(const char* value, size_t size) {
  
  node_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.EventReply.DebugOpStateChange.node_name)
}
::std::string* EventReply_DebugOpStateChange::mutable_node_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.EventReply.DebugOpStateChange.node_name)
  return node_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EventReply_DebugOpStateChange::release_node_name() {
  // @@protoc_insertion_point(field_release:tensorflow.EventReply.DebugOpStateChange.node_name)
  
  return node_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EventReply_DebugOpStateChange::set_allocated_node_name(::std::string* node_name) {
  if (node_name != NULL) {
    
  } else {
    
  }
  node_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), node_name);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.EventReply.DebugOpStateChange.node_name)
}

// optional int32 output_slot = 3;
void EventReply_DebugOpStateChange::clear_output_slot() {
  output_slot_ = 0;
}
::google::protobuf::int32 EventReply_DebugOpStateChange::output_slot() const {
  // @@protoc_insertion_point(field_get:tensorflow.EventReply.DebugOpStateChange.output_slot)
  return output_slot_;
}
void EventReply_DebugOpStateChange::set_output_slot(::google::protobuf::int32 value) {
  
  output_slot_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.EventReply.DebugOpStateChange.output_slot)
}

// optional string debug_op = 4;
void EventReply_DebugOpStateChange::clear_debug_op() {
  debug_op_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EventReply_DebugOpStateChange::debug_op() const {
  // @@protoc_insertion_point(field_get:tensorflow.EventReply.DebugOpStateChange.debug_op)
  return debug_op_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EventReply_DebugOpStateChange::set_debug_op(const ::std::string& value) {
  
  debug_op_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.EventReply.DebugOpStateChange.debug_op)
}
void EventReply_DebugOpStateChange::set_debug_op(const char* value) {
  
  debug_op_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.EventReply.DebugOpStateChange.debug_op)
}
void EventReply_DebugOpStateChange::set_debug_op(const char* value, size_t size) {
  
  debug_op_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.EventReply.DebugOpStateChange.debug_op)
}
::std::string* EventReply_DebugOpStateChange::mutable_debug_op() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.EventReply.DebugOpStateChange.debug_op)
  return debug_op_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EventReply_DebugOpStateChange::release_debug_op() {
  // @@protoc_insertion_point(field_release:tensorflow.EventReply.DebugOpStateChange.debug_op)
  
  return debug_op_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EventReply_DebugOpStateChange::set_allocated_debug_op(::std::string* debug_op) {
  if (debug_op != NULL) {
    
  } else {
    
  }
  debug_op_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), debug_op);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.EventReply.DebugOpStateChange.debug_op)
}

inline const EventReply_DebugOpStateChange* EventReply_DebugOpStateChange::internal_default_instance() {
  return &EventReply_DebugOpStateChange_default_instance_.get();
}
// -------------------------------------------------------------------

// EventReply

// repeated .tensorflow.EventReply.DebugOpStateChange debug_op_state_changes = 1;
int EventReply::debug_op_state_changes_size() const {
  return debug_op_state_changes_.size();
}
void EventReply::clear_debug_op_state_changes() {
  debug_op_state_changes_.Clear();
}
const ::tensorflow::EventReply_DebugOpStateChange& EventReply::debug_op_state_changes(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.EventReply.debug_op_state_changes)
  return debug_op_state_changes_.Get(index);
}
::tensorflow::EventReply_DebugOpStateChange* EventReply::mutable_debug_op_state_changes(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.EventReply.debug_op_state_changes)
  return debug_op_state_changes_.Mutable(index);
}
::tensorflow::EventReply_DebugOpStateChange* EventReply::add_debug_op_state_changes() {
  // @@protoc_insertion_point(field_add:tensorflow.EventReply.debug_op_state_changes)
  return debug_op_state_changes_.Add();
}
::google::protobuf::RepeatedPtrField< ::tensorflow::EventReply_DebugOpStateChange >*
EventReply::mutable_debug_op_state_changes() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.EventReply.debug_op_state_changes)
  return &debug_op_state_changes_;
}
const ::google::protobuf::RepeatedPtrField< ::tensorflow::EventReply_DebugOpStateChange >&
EventReply::debug_op_state_changes() const {
  // @@protoc_insertion_point(field_list:tensorflow.EventReply.debug_op_state_changes)
  return debug_op_state_changes_;
}

inline const EventReply* EventReply::internal_default_instance() {
  return &EventReply_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)
