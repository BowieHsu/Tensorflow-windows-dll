// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/kernel_def.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tensorflow/core/framework/kernel_def.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tensorflow {

namespace {

const ::google::protobuf::Descriptor* KernelDef_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KernelDef_reflection_ = NULL;
const ::google::protobuf::Descriptor* KernelDef_AttrConstraint_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KernelDef_AttrConstraint_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto() {
  protobuf_AddDesc_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "tensorflow/core/framework/kernel_def.proto");
  GOOGLE_CHECK(file != NULL);
  KernelDef_descriptor_ = file->message_type(0);
  static const int KernelDef_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KernelDef, op_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KernelDef, device_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KernelDef, constraint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KernelDef, host_memory_arg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KernelDef, label_),
  };
  KernelDef_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      KernelDef_descriptor_,
      KernelDef::internal_default_instance(),
      KernelDef_offsets_,
      -1,
      -1,
      -1,
      sizeof(KernelDef),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KernelDef, _internal_metadata_));
  KernelDef_AttrConstraint_descriptor_ = KernelDef_descriptor_->nested_type(0);
  static const int KernelDef_AttrConstraint_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KernelDef_AttrConstraint, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KernelDef_AttrConstraint, allowed_values_),
  };
  KernelDef_AttrConstraint_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      KernelDef_AttrConstraint_descriptor_,
      KernelDef_AttrConstraint::internal_default_instance(),
      KernelDef_AttrConstraint_offsets_,
      -1,
      -1,
      -1,
      sizeof(KernelDef_AttrConstraint),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KernelDef_AttrConstraint, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      KernelDef_descriptor_, KernelDef::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      KernelDef_AttrConstraint_descriptor_, KernelDef_AttrConstraint::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto() {
  KernelDef_default_instance_.Shutdown();
  delete KernelDef_reflection_;
  KernelDef_AttrConstraint_default_instance_.Shutdown();
  delete KernelDef_AttrConstraint_reflection_;
}

void protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::tensorflow::protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  KernelDef_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  KernelDef_AttrConstraint_default_instance_.DefaultConstruct();
  KernelDef_default_instance_.get_mutable()->InitAsDefaultInstance();
  KernelDef_AttrConstraint_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto_once_);
void protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto_once_,
                 &protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto_impl);
}
void protobuf_AddDesc_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n*tensorflow/core/framework/kernel_def.p"
    "roto\022\ntensorflow\032*tensorflow/core/framew"
    "ork/attr_value.proto\"\335\001\n\tKernelDef\022\n\n\002op"
    "\030\001 \001(\t\022\023\n\013device_type\030\002 \001(\t\0228\n\nconstrain"
    "t\030\003 \003(\0132$.tensorflow.KernelDef.AttrConst"
    "raint\022\027\n\017host_memory_arg\030\004 \003(\t\022\r\n\005label\030"
    "\005 \001(\t\032M\n\016AttrConstraint\022\014\n\004name\030\001 \001(\t\022-\n"
    "\016allowed_values\030\002 \001(\0132\025.tensorflow.AttrV"
    "alueB0\n\030org.tensorflow.frameworkB\017Kernel"
    "DefProtosP\001\370\001\001b\006proto3", 382);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/framework/kernel_def.proto", &protobuf_RegisterTypes);
  ::tensorflow::protobuf_AddDesc_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto_once_);
void protobuf_AddDesc_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto_once_,
                 &protobuf_AddDesc_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto {
  StaticDescriptorInitializer_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto() {
    protobuf_AddDesc_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto();
  }
} static_descriptor_initializer_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

void KernelDef_AttrConstraint::_slow_mutable_allowed_values() {
  allowed_values_ = ::google::protobuf::Arena::CreateMessage< ::tensorflow::AttrValue >(
      GetArenaNoVirtual());
}
::tensorflow::AttrValue* KernelDef_AttrConstraint::_slow_release_allowed_values() {
  if (allowed_values_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::AttrValue* temp = new ::tensorflow::AttrValue(*allowed_values_);
    allowed_values_ = NULL;
    return temp;
  }
}
::tensorflow::AttrValue* KernelDef_AttrConstraint::unsafe_arena_release_allowed_values() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.KernelDef.AttrConstraint.allowed_values)
  
  ::tensorflow::AttrValue* temp = allowed_values_;
  allowed_values_ = NULL;
  return temp;
}
void KernelDef_AttrConstraint::_slow_set_allocated_allowed_values(
    ::google::protobuf::Arena* message_arena, ::tensorflow::AttrValue** allowed_values) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*allowed_values) == NULL) {
      message_arena->Own(*allowed_values);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*allowed_values)) {
      ::tensorflow::AttrValue* new_allowed_values = 
            ::google::protobuf::Arena::CreateMessage< ::tensorflow::AttrValue >(
            message_arena);
      new_allowed_values->CopyFrom(**allowed_values);
      *allowed_values = new_allowed_values;
    }
}
void KernelDef_AttrConstraint::unsafe_arena_set_allocated_allowed_values(
    ::tensorflow::AttrValue* allowed_values) {
  if (GetArenaNoVirtual() == NULL) {
    delete allowed_values_;
  }
  allowed_values_ = allowed_values;
  if (allowed_values) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.KernelDef.AttrConstraint.allowed_values)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KernelDef_AttrConstraint::kNameFieldNumber;
const int KernelDef_AttrConstraint::kAllowedValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KernelDef_AttrConstraint::KernelDef_AttrConstraint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.KernelDef.AttrConstraint)
}
KernelDef_AttrConstraint::KernelDef_AttrConstraint(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.KernelDef.AttrConstraint)
}

void KernelDef_AttrConstraint::InitAsDefaultInstance() {
  allowed_values_ = const_cast< ::tensorflow::AttrValue*>(
      ::tensorflow::AttrValue::internal_default_instance());
}

KernelDef_AttrConstraint::KernelDef_AttrConstraint(const KernelDef_AttrConstraint& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.KernelDef.AttrConstraint)
}

void KernelDef_AttrConstraint::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allowed_values_ = NULL;
  _cached_size_ = 0;
}

KernelDef_AttrConstraint::~KernelDef_AttrConstraint() {
  // @@protoc_insertion_point(destructor:tensorflow.KernelDef.AttrConstraint)
  SharedDtor();
}

void KernelDef_AttrConstraint::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != &KernelDef_AttrConstraint_default_instance_.get()) {
    delete allowed_values_;
  }
}

void KernelDef_AttrConstraint::ArenaDtor(void* object) {
  KernelDef_AttrConstraint* _this = reinterpret_cast< KernelDef_AttrConstraint* >(object);
  (void)_this;
}
void KernelDef_AttrConstraint::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void KernelDef_AttrConstraint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KernelDef_AttrConstraint::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KernelDef_AttrConstraint_descriptor_;
}

const KernelDef_AttrConstraint& KernelDef_AttrConstraint::default_instance() {
  protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<KernelDef_AttrConstraint> KernelDef_AttrConstraint_default_instance_;

KernelDef_AttrConstraint* KernelDef_AttrConstraint::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<KernelDef_AttrConstraint>(arena);
}

void KernelDef_AttrConstraint::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.KernelDef.AttrConstraint)
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && allowed_values_ != NULL) delete allowed_values_;
  allowed_values_ = NULL;
}

bool KernelDef_AttrConstraint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.KernelDef.AttrConstraint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.KernelDef.AttrConstraint.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_allowed_values;
        break;
      }

      // optional .tensorflow.AttrValue allowed_values = 2;
      case 2: {
        if (tag == 18) {
         parse_allowed_values:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_allowed_values()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.KernelDef.AttrConstraint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.KernelDef.AttrConstraint)
  return false;
#undef DO_
}

void KernelDef_AttrConstraint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.KernelDef.AttrConstraint)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.KernelDef.AttrConstraint.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .tensorflow.AttrValue allowed_values = 2;
  if (this->has_allowed_values()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->allowed_values_, output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.KernelDef.AttrConstraint)
}

::google::protobuf::uint8* KernelDef_AttrConstraint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.KernelDef.AttrConstraint)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.KernelDef.AttrConstraint.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .tensorflow.AttrValue allowed_values = 2;
  if (this->has_allowed_values()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->allowed_values_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.KernelDef.AttrConstraint)
  return target;
}

size_t KernelDef_AttrConstraint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.KernelDef.AttrConstraint)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .tensorflow.AttrValue allowed_values = 2;
  if (this->has_allowed_values()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->allowed_values_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KernelDef_AttrConstraint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.KernelDef.AttrConstraint)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const KernelDef_AttrConstraint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KernelDef_AttrConstraint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.KernelDef.AttrConstraint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.KernelDef.AttrConstraint)
    UnsafeMergeFrom(*source);
  }
}

void KernelDef_AttrConstraint::MergeFrom(const KernelDef_AttrConstraint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.KernelDef.AttrConstraint)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void KernelDef_AttrConstraint::UnsafeMergeFrom(const KernelDef_AttrConstraint& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.has_allowed_values()) {
    mutable_allowed_values()->::tensorflow::AttrValue::MergeFrom(from.allowed_values());
  }
}

void KernelDef_AttrConstraint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.KernelDef.AttrConstraint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KernelDef_AttrConstraint::CopyFrom(const KernelDef_AttrConstraint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.KernelDef.AttrConstraint)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool KernelDef_AttrConstraint::IsInitialized() const {

  return true;
}

void KernelDef_AttrConstraint::Swap(KernelDef_AttrConstraint* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    KernelDef_AttrConstraint temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void KernelDef_AttrConstraint::UnsafeArenaSwap(KernelDef_AttrConstraint* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void KernelDef_AttrConstraint::InternalSwap(KernelDef_AttrConstraint* other) {
  name_.Swap(&other->name_);
  std::swap(allowed_values_, other->allowed_values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KernelDef_AttrConstraint::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KernelDef_AttrConstraint_descriptor_;
  metadata.reflection = KernelDef_AttrConstraint_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KernelDef::kOpFieldNumber;
const int KernelDef::kDeviceTypeFieldNumber;
const int KernelDef::kConstraintFieldNumber;
const int KernelDef::kHostMemoryArgFieldNumber;
const int KernelDef::kLabelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KernelDef::KernelDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.KernelDef)
}
KernelDef::KernelDef(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  constraint_(arena),
  host_memory_arg_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.KernelDef)
}

void KernelDef::InitAsDefaultInstance() {
}

KernelDef::KernelDef(const KernelDef& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.KernelDef)
}

void KernelDef::SharedCtor() {
  op_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

KernelDef::~KernelDef() {
  // @@protoc_insertion_point(destructor:tensorflow.KernelDef)
  SharedDtor();
}

void KernelDef::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  op_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  device_type_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  label_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void KernelDef::ArenaDtor(void* object) {
  KernelDef* _this = reinterpret_cast< KernelDef* >(object);
  (void)_this;
}
void KernelDef::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void KernelDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KernelDef::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KernelDef_descriptor_;
}

const KernelDef& KernelDef::default_instance() {
  protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<KernelDef> KernelDef_default_instance_;

KernelDef* KernelDef::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<KernelDef>(arena);
}

void KernelDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.KernelDef)
  op_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  device_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  label_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  constraint_.Clear();
  host_memory_arg_.Clear();
}

bool KernelDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.KernelDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string op = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_op()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->op().data(), this->op().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.KernelDef.op"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_device_type;
        break;
      }

      // optional string device_type = 2;
      case 2: {
        if (tag == 18) {
         parse_device_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_type().data(), this->device_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.KernelDef.device_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_constraint;
        break;
      }

      // repeated .tensorflow.KernelDef.AttrConstraint constraint = 3;
      case 3: {
        if (tag == 26) {
         parse_constraint:
          DO_(input->IncrementRecursionDepth());
         parse_loop_constraint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_constraint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_constraint;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(34)) goto parse_host_memory_arg;
        break;
      }

      // repeated string host_memory_arg = 4;
      case 4: {
        if (tag == 34) {
         parse_host_memory_arg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_host_memory_arg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host_memory_arg(this->host_memory_arg_size() - 1).data(),
            this->host_memory_arg(this->host_memory_arg_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.KernelDef.host_memory_arg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_host_memory_arg;
        if (input->ExpectTag(42)) goto parse_label;
        break;
      }

      // optional string label = 5;
      case 5: {
        if (tag == 42) {
         parse_label:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), this->label().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.KernelDef.label"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.KernelDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.KernelDef)
  return false;
#undef DO_
}

void KernelDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.KernelDef)
  // optional string op = 1;
  if (this->op().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->op().data(), this->op().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.KernelDef.op");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->op(), output);
  }

  // optional string device_type = 2;
  if (this->device_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_type().data(), this->device_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.KernelDef.device_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->device_type(), output);
  }

  // repeated .tensorflow.KernelDef.AttrConstraint constraint = 3;
  for (unsigned int i = 0, n = this->constraint_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->constraint(i), output);
  }

  // repeated string host_memory_arg = 4;
  for (int i = 0; i < this->host_memory_arg_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_memory_arg(i).data(), this->host_memory_arg(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.KernelDef.host_memory_arg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->host_memory_arg(i), output);
  }

  // optional string label = 5;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.KernelDef.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->label(), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.KernelDef)
}

::google::protobuf::uint8* KernelDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.KernelDef)
  // optional string op = 1;
  if (this->op().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->op().data(), this->op().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.KernelDef.op");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->op(), target);
  }

  // optional string device_type = 2;
  if (this->device_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_type().data(), this->device_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.KernelDef.device_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->device_type(), target);
  }

  // repeated .tensorflow.KernelDef.AttrConstraint constraint = 3;
  for (unsigned int i = 0, n = this->constraint_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->constraint(i), false, target);
  }

  // repeated string host_memory_arg = 4;
  for (int i = 0; i < this->host_memory_arg_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_memory_arg(i).data(), this->host_memory_arg(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.KernelDef.host_memory_arg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->host_memory_arg(i), target);
  }

  // optional string label = 5;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.KernelDef.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->label(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.KernelDef)
  return target;
}

size_t KernelDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.KernelDef)
  size_t total_size = 0;

  // optional string op = 1;
  if (this->op().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->op());
  }

  // optional string device_type = 2;
  if (this->device_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_type());
  }

  // optional string label = 5;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  // repeated .tensorflow.KernelDef.AttrConstraint constraint = 3;
  {
    unsigned int count = this->constraint_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->constraint(i));
    }
  }

  // repeated string host_memory_arg = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->host_memory_arg_size());
  for (int i = 0; i < this->host_memory_arg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->host_memory_arg(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KernelDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.KernelDef)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const KernelDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KernelDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.KernelDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.KernelDef)
    UnsafeMergeFrom(*source);
  }
}

void KernelDef::MergeFrom(const KernelDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.KernelDef)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void KernelDef::UnsafeMergeFrom(const KernelDef& from) {
  GOOGLE_DCHECK(&from != this);
  constraint_.MergeFrom(from.constraint_);
  host_memory_arg_.UnsafeMergeFrom(from.host_memory_arg_);
  if (from.op().size() > 0) {
    set_op(from.op());
  }
  if (from.device_type().size() > 0) {
    set_device_type(from.device_type());
  }
  if (from.label().size() > 0) {
    set_label(from.label());
  }
}

void KernelDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.KernelDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KernelDef::CopyFrom(const KernelDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.KernelDef)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool KernelDef::IsInitialized() const {

  return true;
}

void KernelDef::Swap(KernelDef* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    KernelDef temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void KernelDef::UnsafeArenaSwap(KernelDef* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void KernelDef::InternalSwap(KernelDef* other) {
  op_.Swap(&other->op_);
  device_type_.Swap(&other->device_type_);
  constraint_.UnsafeArenaSwap(&other->constraint_);
  host_memory_arg_.UnsafeArenaSwap(&other->host_memory_arg_);
  label_.Swap(&other->label_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KernelDef::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KernelDef_descriptor_;
  metadata.reflection = KernelDef_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KernelDef_AttrConstraint

// optional string name = 1;
void KernelDef_AttrConstraint::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& KernelDef_AttrConstraint::name() const {
  // @@protoc_insertion_point(field_get:tensorflow.KernelDef.AttrConstraint.name)
  return name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void KernelDef_AttrConstraint::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.KernelDef.AttrConstraint.name)
}
void KernelDef_AttrConstraint::set_name(const char* value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.KernelDef.AttrConstraint.name)
}
void KernelDef_AttrConstraint::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.KernelDef.AttrConstraint.name)
}
::std::string* KernelDef_AttrConstraint::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.KernelDef.AttrConstraint.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* KernelDef_AttrConstraint::release_name() {
  // @@protoc_insertion_point(field_release:tensorflow.KernelDef.AttrConstraint.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* KernelDef_AttrConstraint::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.KernelDef.AttrConstraint.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void KernelDef_AttrConstraint::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.KernelDef.AttrConstraint.name)
}
void KernelDef_AttrConstraint::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.KernelDef.AttrConstraint.name)
}

// optional .tensorflow.AttrValue allowed_values = 2;
bool KernelDef_AttrConstraint::has_allowed_values() const {
  return this != internal_default_instance() && allowed_values_ != NULL;
}
void KernelDef_AttrConstraint::clear_allowed_values() {
  if (GetArenaNoVirtual() == NULL && allowed_values_ != NULL) delete allowed_values_;
  allowed_values_ = NULL;
}
const ::tensorflow::AttrValue& KernelDef_AttrConstraint::allowed_values() const {
  // @@protoc_insertion_point(field_get:tensorflow.KernelDef.AttrConstraint.allowed_values)
  return allowed_values_ != NULL ? *allowed_values_
                         : *::tensorflow::AttrValue::internal_default_instance();
}
::tensorflow::AttrValue* KernelDef_AttrConstraint::mutable_allowed_values() {
  
  if (allowed_values_ == NULL) {
    _slow_mutable_allowed_values();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.KernelDef.AttrConstraint.allowed_values)
  return allowed_values_;
}
::tensorflow::AttrValue* KernelDef_AttrConstraint::release_allowed_values() {
  // @@protoc_insertion_point(field_release:tensorflow.KernelDef.AttrConstraint.allowed_values)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_allowed_values();
  } else {
    ::tensorflow::AttrValue* temp = allowed_values_;
    allowed_values_ = NULL;
    return temp;
  }
}
 void KernelDef_AttrConstraint::set_allocated_allowed_values(::tensorflow::AttrValue* allowed_values) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete allowed_values_;
  }
  if (allowed_values != NULL) {
    _slow_set_allocated_allowed_values(message_arena, &allowed_values);
  }
  allowed_values_ = allowed_values;
  if (allowed_values) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.KernelDef.AttrConstraint.allowed_values)
}

inline const KernelDef_AttrConstraint* KernelDef_AttrConstraint::internal_default_instance() {
  return &KernelDef_AttrConstraint_default_instance_.get();
}
// -------------------------------------------------------------------

// KernelDef

// optional string op = 1;
void KernelDef::clear_op() {
  op_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& KernelDef::op() const {
  // @@protoc_insertion_point(field_get:tensorflow.KernelDef.op)
  return op_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void KernelDef::set_op(const ::std::string& value) {
  
  op_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.KernelDef.op)
}
void KernelDef::set_op(const char* value) {
  
  op_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.KernelDef.op)
}
void KernelDef::set_op(const char* value,
    size_t size) {
  
  op_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.KernelDef.op)
}
::std::string* KernelDef::mutable_op() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.KernelDef.op)
  return op_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* KernelDef::release_op() {
  // @@protoc_insertion_point(field_release:tensorflow.KernelDef.op)
  
  return op_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* KernelDef::unsafe_arena_release_op() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.KernelDef.op)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return op_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void KernelDef::set_allocated_op(::std::string* op) {
  if (op != NULL) {
    
  } else {
    
  }
  op_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), op,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.KernelDef.op)
}
void KernelDef::unsafe_arena_set_allocated_op(
    ::std::string* op) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (op != NULL) {
    
  } else {
    
  }
  op_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      op, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.KernelDef.op)
}

// optional string device_type = 2;
void KernelDef::clear_device_type() {
  device_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& KernelDef::device_type() const {
  // @@protoc_insertion_point(field_get:tensorflow.KernelDef.device_type)
  return device_type_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void KernelDef::set_device_type(const ::std::string& value) {
  
  device_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.KernelDef.device_type)
}
void KernelDef::set_device_type(const char* value) {
  
  device_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.KernelDef.device_type)
}
void KernelDef::set_device_type(const char* value,
    size_t size) {
  
  device_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.KernelDef.device_type)
}
::std::string* KernelDef::mutable_device_type() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.KernelDef.device_type)
  return device_type_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* KernelDef::release_device_type() {
  // @@protoc_insertion_point(field_release:tensorflow.KernelDef.device_type)
  
  return device_type_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* KernelDef::unsafe_arena_release_device_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.KernelDef.device_type)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return device_type_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void KernelDef::set_allocated_device_type(::std::string* device_type) {
  if (device_type != NULL) {
    
  } else {
    
  }
  device_type_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_type,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.KernelDef.device_type)
}
void KernelDef::unsafe_arena_set_allocated_device_type(
    ::std::string* device_type) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (device_type != NULL) {
    
  } else {
    
  }
  device_type_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      device_type, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.KernelDef.device_type)
}

// repeated .tensorflow.KernelDef.AttrConstraint constraint = 3;
int KernelDef::constraint_size() const {
  return constraint_.size();
}
void KernelDef::clear_constraint() {
  constraint_.Clear();
}
const ::tensorflow::KernelDef_AttrConstraint& KernelDef::constraint(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.KernelDef.constraint)
  return constraint_.Get(index);
}
::tensorflow::KernelDef_AttrConstraint* KernelDef::mutable_constraint(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.KernelDef.constraint)
  return constraint_.Mutable(index);
}
::tensorflow::KernelDef_AttrConstraint* KernelDef::add_constraint() {
  // @@protoc_insertion_point(field_add:tensorflow.KernelDef.constraint)
  return constraint_.Add();
}
::google::protobuf::RepeatedPtrField< ::tensorflow::KernelDef_AttrConstraint >*
KernelDef::mutable_constraint() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.KernelDef.constraint)
  return &constraint_;
}
const ::google::protobuf::RepeatedPtrField< ::tensorflow::KernelDef_AttrConstraint >&
KernelDef::constraint() const {
  // @@protoc_insertion_point(field_list:tensorflow.KernelDef.constraint)
  return constraint_;
}

// repeated string host_memory_arg = 4;
int KernelDef::host_memory_arg_size() const {
  return host_memory_arg_.size();
}
void KernelDef::clear_host_memory_arg() {
  host_memory_arg_.Clear();
}
const ::std::string& KernelDef::host_memory_arg(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.KernelDef.host_memory_arg)
  return host_memory_arg_.Get(index);
}
::std::string* KernelDef::mutable_host_memory_arg(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.KernelDef.host_memory_arg)
  return host_memory_arg_.Mutable(index);
}
void KernelDef::set_host_memory_arg(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.KernelDef.host_memory_arg)
  host_memory_arg_.Mutable(index)->assign(value);
}
void KernelDef::set_host_memory_arg(int index, const char* value) {
  host_memory_arg_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.KernelDef.host_memory_arg)
}
void KernelDef::set_host_memory_arg(int index, const char* value, size_t size) {
  host_memory_arg_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.KernelDef.host_memory_arg)
}
::std::string* KernelDef::add_host_memory_arg() {
  // @@protoc_insertion_point(field_add_mutable:tensorflow.KernelDef.host_memory_arg)
  return host_memory_arg_.Add();
}
void KernelDef::add_host_memory_arg(const ::std::string& value) {
  host_memory_arg_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.KernelDef.host_memory_arg)
}
void KernelDef::add_host_memory_arg(const char* value) {
  host_memory_arg_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.KernelDef.host_memory_arg)
}
void KernelDef::add_host_memory_arg(const char* value, size_t size) {
  host_memory_arg_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.KernelDef.host_memory_arg)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
KernelDef::host_memory_arg() const {
  // @@protoc_insertion_point(field_list:tensorflow.KernelDef.host_memory_arg)
  return host_memory_arg_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
KernelDef::mutable_host_memory_arg() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.KernelDef.host_memory_arg)
  return &host_memory_arg_;
}

// optional string label = 5;
void KernelDef::clear_label() {
  label_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& KernelDef::label() const {
  // @@protoc_insertion_point(field_get:tensorflow.KernelDef.label)
  return label_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void KernelDef::set_label(const ::std::string& value) {
  
  label_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.KernelDef.label)
}
void KernelDef::set_label(const char* value) {
  
  label_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.KernelDef.label)
}
void KernelDef::set_label(const char* value,
    size_t size) {
  
  label_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.KernelDef.label)
}
::std::string* KernelDef::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.KernelDef.label)
  return label_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* KernelDef::release_label() {
  // @@protoc_insertion_point(field_release:tensorflow.KernelDef.label)
  
  return label_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* KernelDef::unsafe_arena_release_label() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.KernelDef.label)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return label_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void KernelDef::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.KernelDef.label)
}
void KernelDef::unsafe_arena_set_allocated_label(
    ::std::string* label) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (label != NULL) {
    
  } else {
    
  }
  label_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      label, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.KernelDef.label)
}

inline const KernelDef* KernelDef::internal_default_instance() {
  return &KernelDef_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)
