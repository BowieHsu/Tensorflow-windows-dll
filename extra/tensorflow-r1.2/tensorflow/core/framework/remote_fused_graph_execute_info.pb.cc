// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/remote_fused_graph_execute_info.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tensorflow/core/framework/remote_fused_graph_execute_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tensorflow {

namespace {

const ::google::protobuf::Descriptor* RemoteFusedGraphExecuteInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoteFusedGraphExecuteInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoteFusedGraphExecuteInfo_TensorShapeTypeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoteFusedGraphExecuteInfo_TensorShapeTypeProto_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto() {
  protobuf_AddDesc_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "tensorflow/core/framework/remote_fused_graph_execute_info.proto");
  GOOGLE_CHECK(file != NULL);
  RemoteFusedGraphExecuteInfo_descriptor_ = file->message_type(0);
  static const int RemoteFusedGraphExecuteInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteFusedGraphExecuteInfo, remote_graph_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteFusedGraphExecuteInfo, graph_input_node_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteFusedGraphExecuteInfo, graph_output_node_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteFusedGraphExecuteInfo, executor_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteFusedGraphExecuteInfo, serialized_executor_parameters_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteFusedGraphExecuteInfo, default_graph_input_tensor_shape_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteFusedGraphExecuteInfo, default_graph_output_tensor_shape_),
  };
  RemoteFusedGraphExecuteInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RemoteFusedGraphExecuteInfo_descriptor_,
      RemoteFusedGraphExecuteInfo::internal_default_instance(),
      RemoteFusedGraphExecuteInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(RemoteFusedGraphExecuteInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteFusedGraphExecuteInfo, _internal_metadata_));
  RemoteFusedGraphExecuteInfo_TensorShapeTypeProto_descriptor_ = RemoteFusedGraphExecuteInfo_descriptor_->nested_type(0);
  static const int RemoteFusedGraphExecuteInfo_TensorShapeTypeProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteFusedGraphExecuteInfo_TensorShapeTypeProto, dtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteFusedGraphExecuteInfo_TensorShapeTypeProto, shape_),
  };
  RemoteFusedGraphExecuteInfo_TensorShapeTypeProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RemoteFusedGraphExecuteInfo_TensorShapeTypeProto_descriptor_,
      RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::internal_default_instance(),
      RemoteFusedGraphExecuteInfo_TensorShapeTypeProto_offsets_,
      -1,
      -1,
      -1,
      sizeof(RemoteFusedGraphExecuteInfo_TensorShapeTypeProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteFusedGraphExecuteInfo_TensorShapeTypeProto, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RemoteFusedGraphExecuteInfo_descriptor_, RemoteFusedGraphExecuteInfo::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RemoteFusedGraphExecuteInfo_TensorShapeTypeProto_descriptor_, RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto() {
  RemoteFusedGraphExecuteInfo_default_instance_.Shutdown();
  delete RemoteFusedGraphExecuteInfo_reflection_;
  RemoteFusedGraphExecuteInfo_TensorShapeTypeProto_default_instance_.Shutdown();
  delete RemoteFusedGraphExecuteInfo_TensorShapeTypeProto_reflection_;
}

void protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::tensorflow::protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fgraph_2eproto();
  ::tensorflow::protobuf_InitDefaults_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto();
  ::tensorflow::protobuf_InitDefaults_tensorflow_2fcore_2fframework_2ftypes_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  RemoteFusedGraphExecuteInfo_default_instance_.DefaultConstruct();
  RemoteFusedGraphExecuteInfo_TensorShapeTypeProto_default_instance_.DefaultConstruct();
  RemoteFusedGraphExecuteInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
  RemoteFusedGraphExecuteInfo_TensorShapeTypeProto_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto_once_);
void protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto_once_,
                 &protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto_impl);
}
void protobuf_AddDesc_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\?tensorflow/core/framework/remote_fused"
    "_graph_execute_info.proto\022\ntensorflow\032%t"
    "ensorflow/core/framework/graph.proto\032,te"
    "nsorflow/core/framework/tensor_shape.pro"
    "to\032%tensorflow/core/framework/types.prot"
    "o\"\202\004\n\033RemoteFusedGraphExecuteInfo\022*\n\014rem"
    "ote_graph\030\001 \001(\0132\024.tensorflow.GraphDef\022\035\n"
    "\025graph_input_node_name\030\002 \003(\t\022\036\n\026graph_ou"
    "tput_node_name\030\003 \003(\t\022\025\n\rexecutor_name\030\004 "
    "\001(\t\022&\n\036serialized_executor_parameters\030\005 "
    "\001(\014\022f\n default_graph_input_tensor_shape\030"
    "\006 \003(\0132<.tensorflow.RemoteFusedGraphExecu"
    "teInfo.TensorShapeTypeProto\022g\n!default_g"
    "raph_output_tensor_shape\030\007 \003(\0132<.tensorf"
    "low.RemoteFusedGraphExecuteInfo.TensorSh"
    "apeTypeProto\032h\n\024TensorShapeTypeProto\022#\n\005"
    "dtype\030\001 \001(\0162\024.tensorflow.DataType\022+\n\005sha"
    "pe\030\002 \001(\0132\034.tensorflow.TensorShapeProtoBA"
    "\n\030org.tensorflow.frameworkB RemoteFusedG"
    "raphExecuteInfoProtoP\001\370\001\001b\006proto3", 793);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/framework/remote_fused_graph_execute_info.proto", &protobuf_RegisterTypes);
  ::tensorflow::protobuf_AddDesc_tensorflow_2fcore_2fframework_2fgraph_2eproto();
  ::tensorflow::protobuf_AddDesc_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto();
  ::tensorflow::protobuf_AddDesc_tensorflow_2fcore_2fframework_2ftypes_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto_once_);
void protobuf_AddDesc_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto_once_,
                 &protobuf_AddDesc_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto {
  StaticDescriptorInitializer_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto() {
    protobuf_AddDesc_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto();
  }
} static_descriptor_initializer_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

void RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::_slow_mutable_shape() {
  shape_ = ::google::protobuf::Arena::CreateMessage< ::tensorflow::TensorShapeProto >(
      GetArenaNoVirtual());
}
::tensorflow::TensorShapeProto* RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::_slow_release_shape() {
  if (shape_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::TensorShapeProto* temp = new ::tensorflow::TensorShapeProto(*shape_);
    shape_ = NULL;
    return temp;
  }
}
::tensorflow::TensorShapeProto* RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::unsafe_arena_release_shape() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto.shape)
  
  ::tensorflow::TensorShapeProto* temp = shape_;
  shape_ = NULL;
  return temp;
}
void RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::_slow_set_allocated_shape(
    ::google::protobuf::Arena* message_arena, ::tensorflow::TensorShapeProto** shape) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*shape) == NULL) {
      message_arena->Own(*shape);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*shape)) {
      ::tensorflow::TensorShapeProto* new_shape = 
            ::google::protobuf::Arena::CreateMessage< ::tensorflow::TensorShapeProto >(
            message_arena);
      new_shape->CopyFrom(**shape);
      *shape = new_shape;
    }
}
void RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::unsafe_arena_set_allocated_shape(
    ::tensorflow::TensorShapeProto* shape) {
  if (GetArenaNoVirtual() == NULL) {
    delete shape_;
  }
  shape_ = shape;
  if (shape) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto.shape)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::kDtypeFieldNumber;
const int RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::kShapeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto)
}
RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto)
}

void RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::InitAsDefaultInstance() {
  shape_ = const_cast< ::tensorflow::TensorShapeProto*>(
      ::tensorflow::TensorShapeProto::internal_default_instance());
}

RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto(const RemoteFusedGraphExecuteInfo_TensorShapeTypeProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto)
}

void RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::SharedCtor() {
  shape_ = NULL;
  dtype_ = 0;
  _cached_size_ = 0;
}

RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::~RemoteFusedGraphExecuteInfo_TensorShapeTypeProto() {
  // @@protoc_insertion_point(destructor:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto)
  SharedDtor();
}

void RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &RemoteFusedGraphExecuteInfo_TensorShapeTypeProto_default_instance_.get()) {
    delete shape_;
  }
}

void RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::ArenaDtor(void* object) {
  RemoteFusedGraphExecuteInfo_TensorShapeTypeProto* _this = reinterpret_cast< RemoteFusedGraphExecuteInfo_TensorShapeTypeProto* >(object);
  (void)_this;
}
void RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoteFusedGraphExecuteInfo_TensorShapeTypeProto_descriptor_;
}

const RemoteFusedGraphExecuteInfo_TensorShapeTypeProto& RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::default_instance() {
  protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RemoteFusedGraphExecuteInfo_TensorShapeTypeProto> RemoteFusedGraphExecuteInfo_TensorShapeTypeProto_default_instance_;

RemoteFusedGraphExecuteInfo_TensorShapeTypeProto* RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<RemoteFusedGraphExecuteInfo_TensorShapeTypeProto>(arena);
}

void RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto)
  dtype_ = 0;
  if (GetArenaNoVirtual() == NULL && shape_ != NULL) delete shape_;
  shape_ = NULL;
}

bool RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tensorflow.DataType dtype = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_dtype(static_cast< ::tensorflow::DataType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_shape;
        break;
      }

      // optional .tensorflow.TensorShapeProto shape = 2;
      case 2: {
        if (tag == 18) {
         parse_shape:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shape()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto)
  return false;
#undef DO_
}

void RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto)
  // optional .tensorflow.DataType dtype = 1;
  if (this->dtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->dtype(), output);
  }

  // optional .tensorflow.TensorShapeProto shape = 2;
  if (this->has_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->shape_, output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto)
}

::google::protobuf::uint8* RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto)
  // optional .tensorflow.DataType dtype = 1;
  if (this->dtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->dtype(), target);
  }

  // optional .tensorflow.TensorShapeProto shape = 2;
  if (this->has_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->shape_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto)
  return target;
}

size_t RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto)
  size_t total_size = 0;

  // optional .tensorflow.DataType dtype = 1;
  if (this->dtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->dtype());
  }

  // optional .tensorflow.TensorShapeProto shape = 2;
  if (this->has_shape()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->shape_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RemoteFusedGraphExecuteInfo_TensorShapeTypeProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoteFusedGraphExecuteInfo_TensorShapeTypeProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto)
    UnsafeMergeFrom(*source);
  }
}

void RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::MergeFrom(const RemoteFusedGraphExecuteInfo_TensorShapeTypeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::UnsafeMergeFrom(const RemoteFusedGraphExecuteInfo_TensorShapeTypeProto& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.dtype() != 0) {
    set_dtype(from.dtype());
  }
  if (from.has_shape()) {
    mutable_shape()->::tensorflow::TensorShapeProto::MergeFrom(from.shape());
  }
}

void RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::CopyFrom(const RemoteFusedGraphExecuteInfo_TensorShapeTypeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::IsInitialized() const {

  return true;
}

void RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::Swap(RemoteFusedGraphExecuteInfo_TensorShapeTypeProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RemoteFusedGraphExecuteInfo_TensorShapeTypeProto temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::UnsafeArenaSwap(RemoteFusedGraphExecuteInfo_TensorShapeTypeProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::InternalSwap(RemoteFusedGraphExecuteInfo_TensorShapeTypeProto* other) {
  std::swap(dtype_, other->dtype_);
  std::swap(shape_, other->shape_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoteFusedGraphExecuteInfo_TensorShapeTypeProto_descriptor_;
  metadata.reflection = RemoteFusedGraphExecuteInfo_TensorShapeTypeProto_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

void RemoteFusedGraphExecuteInfo::_slow_mutable_remote_graph() {
  remote_graph_ = ::google::protobuf::Arena::CreateMessage< ::tensorflow::GraphDef >(
      GetArenaNoVirtual());
}
::tensorflow::GraphDef* RemoteFusedGraphExecuteInfo::_slow_release_remote_graph() {
  if (remote_graph_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::GraphDef* temp = new ::tensorflow::GraphDef(*remote_graph_);
    remote_graph_ = NULL;
    return temp;
  }
}
::tensorflow::GraphDef* RemoteFusedGraphExecuteInfo::unsafe_arena_release_remote_graph() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.RemoteFusedGraphExecuteInfo.remote_graph)
  
  ::tensorflow::GraphDef* temp = remote_graph_;
  remote_graph_ = NULL;
  return temp;
}
void RemoteFusedGraphExecuteInfo::_slow_set_allocated_remote_graph(
    ::google::protobuf::Arena* message_arena, ::tensorflow::GraphDef** remote_graph) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*remote_graph) == NULL) {
      message_arena->Own(*remote_graph);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*remote_graph)) {
      ::tensorflow::GraphDef* new_remote_graph = 
            ::google::protobuf::Arena::CreateMessage< ::tensorflow::GraphDef >(
            message_arena);
      new_remote_graph->CopyFrom(**remote_graph);
      *remote_graph = new_remote_graph;
    }
}
void RemoteFusedGraphExecuteInfo::unsafe_arena_set_allocated_remote_graph(
    ::tensorflow::GraphDef* remote_graph) {
  if (GetArenaNoVirtual() == NULL) {
    delete remote_graph_;
  }
  remote_graph_ = remote_graph;
  if (remote_graph) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RemoteFusedGraphExecuteInfo.remote_graph)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoteFusedGraphExecuteInfo::kRemoteGraphFieldNumber;
const int RemoteFusedGraphExecuteInfo::kGraphInputNodeNameFieldNumber;
const int RemoteFusedGraphExecuteInfo::kGraphOutputNodeNameFieldNumber;
const int RemoteFusedGraphExecuteInfo::kExecutorNameFieldNumber;
const int RemoteFusedGraphExecuteInfo::kSerializedExecutorParametersFieldNumber;
const int RemoteFusedGraphExecuteInfo::kDefaultGraphInputTensorShapeFieldNumber;
const int RemoteFusedGraphExecuteInfo::kDefaultGraphOutputTensorShapeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoteFusedGraphExecuteInfo::RemoteFusedGraphExecuteInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.RemoteFusedGraphExecuteInfo)
}
RemoteFusedGraphExecuteInfo::RemoteFusedGraphExecuteInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  graph_input_node_name_(arena),
  graph_output_node_name_(arena),
  default_graph_input_tensor_shape_(arena),
  default_graph_output_tensor_shape_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.RemoteFusedGraphExecuteInfo)
}

void RemoteFusedGraphExecuteInfo::InitAsDefaultInstance() {
  remote_graph_ = const_cast< ::tensorflow::GraphDef*>(
      ::tensorflow::GraphDef::internal_default_instance());
}

RemoteFusedGraphExecuteInfo::RemoteFusedGraphExecuteInfo(const RemoteFusedGraphExecuteInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.RemoteFusedGraphExecuteInfo)
}

void RemoteFusedGraphExecuteInfo::SharedCtor() {
  executor_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialized_executor_parameters_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_graph_ = NULL;
  _cached_size_ = 0;
}

RemoteFusedGraphExecuteInfo::~RemoteFusedGraphExecuteInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.RemoteFusedGraphExecuteInfo)
  SharedDtor();
}

void RemoteFusedGraphExecuteInfo::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  executor_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  serialized_executor_parameters_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != &RemoteFusedGraphExecuteInfo_default_instance_.get()) {
    delete remote_graph_;
  }
}

void RemoteFusedGraphExecuteInfo::ArenaDtor(void* object) {
  RemoteFusedGraphExecuteInfo* _this = reinterpret_cast< RemoteFusedGraphExecuteInfo* >(object);
  (void)_this;
}
void RemoteFusedGraphExecuteInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RemoteFusedGraphExecuteInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoteFusedGraphExecuteInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoteFusedGraphExecuteInfo_descriptor_;
}

const RemoteFusedGraphExecuteInfo& RemoteFusedGraphExecuteInfo::default_instance() {
  protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RemoteFusedGraphExecuteInfo> RemoteFusedGraphExecuteInfo_default_instance_;

RemoteFusedGraphExecuteInfo* RemoteFusedGraphExecuteInfo::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<RemoteFusedGraphExecuteInfo>(arena);
}

void RemoteFusedGraphExecuteInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.RemoteFusedGraphExecuteInfo)
  if (GetArenaNoVirtual() == NULL && remote_graph_ != NULL) delete remote_graph_;
  remote_graph_ = NULL;
  executor_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  serialized_executor_parameters_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  graph_input_node_name_.Clear();
  graph_output_node_name_.Clear();
  default_graph_input_tensor_shape_.Clear();
  default_graph_output_tensor_shape_.Clear();
}

bool RemoteFusedGraphExecuteInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.RemoteFusedGraphExecuteInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tensorflow.GraphDef remote_graph = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_remote_graph()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_graph_input_node_name;
        break;
      }

      // repeated string graph_input_node_name = 2;
      case 2: {
        if (tag == 18) {
         parse_graph_input_node_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_graph_input_node_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->graph_input_node_name(this->graph_input_node_name_size() - 1).data(),
            this->graph_input_node_name(this->graph_input_node_name_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.RemoteFusedGraphExecuteInfo.graph_input_node_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_graph_input_node_name;
        if (input->ExpectTag(26)) goto parse_graph_output_node_name;
        break;
      }

      // repeated string graph_output_node_name = 3;
      case 3: {
        if (tag == 26) {
         parse_graph_output_node_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_graph_output_node_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->graph_output_node_name(this->graph_output_node_name_size() - 1).data(),
            this->graph_output_node_name(this->graph_output_node_name_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.RemoteFusedGraphExecuteInfo.graph_output_node_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_graph_output_node_name;
        if (input->ExpectTag(34)) goto parse_executor_name;
        break;
      }

      // optional string executor_name = 4;
      case 4: {
        if (tag == 34) {
         parse_executor_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_executor_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->executor_name().data(), this->executor_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.RemoteFusedGraphExecuteInfo.executor_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_serialized_executor_parameters;
        break;
      }

      // optional bytes serialized_executor_parameters = 5;
      case 5: {
        if (tag == 42) {
         parse_serialized_executor_parameters:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_serialized_executor_parameters()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_default_graph_input_tensor_shape;
        break;
      }

      // repeated .tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto default_graph_input_tensor_shape = 6;
      case 6: {
        if (tag == 50) {
         parse_default_graph_input_tensor_shape:
          DO_(input->IncrementRecursionDepth());
         parse_loop_default_graph_input_tensor_shape:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_default_graph_input_tensor_shape()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_default_graph_input_tensor_shape;
        if (input->ExpectTag(58)) goto parse_loop_default_graph_output_tensor_shape;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto default_graph_output_tensor_shape = 7;
      case 7: {
        if (tag == 58) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_default_graph_output_tensor_shape:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_default_graph_output_tensor_shape()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_default_graph_output_tensor_shape;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.RemoteFusedGraphExecuteInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.RemoteFusedGraphExecuteInfo)
  return false;
#undef DO_
}

void RemoteFusedGraphExecuteInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.RemoteFusedGraphExecuteInfo)
  // optional .tensorflow.GraphDef remote_graph = 1;
  if (this->has_remote_graph()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->remote_graph_, output);
  }

  // repeated string graph_input_node_name = 2;
  for (int i = 0; i < this->graph_input_node_name_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_input_node_name(i).data(), this->graph_input_node_name(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RemoteFusedGraphExecuteInfo.graph_input_node_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->graph_input_node_name(i), output);
  }

  // repeated string graph_output_node_name = 3;
  for (int i = 0; i < this->graph_output_node_name_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_output_node_name(i).data(), this->graph_output_node_name(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RemoteFusedGraphExecuteInfo.graph_output_node_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->graph_output_node_name(i), output);
  }

  // optional string executor_name = 4;
  if (this->executor_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->executor_name().data(), this->executor_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RemoteFusedGraphExecuteInfo.executor_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->executor_name(), output);
  }

  // optional bytes serialized_executor_parameters = 5;
  if (this->serialized_executor_parameters().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->serialized_executor_parameters(), output);
  }

  // repeated .tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto default_graph_input_tensor_shape = 6;
  for (unsigned int i = 0, n = this->default_graph_input_tensor_shape_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->default_graph_input_tensor_shape(i), output);
  }

  // repeated .tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto default_graph_output_tensor_shape = 7;
  for (unsigned int i = 0, n = this->default_graph_output_tensor_shape_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->default_graph_output_tensor_shape(i), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.RemoteFusedGraphExecuteInfo)
}

::google::protobuf::uint8* RemoteFusedGraphExecuteInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.RemoteFusedGraphExecuteInfo)
  // optional .tensorflow.GraphDef remote_graph = 1;
  if (this->has_remote_graph()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->remote_graph_, false, target);
  }

  // repeated string graph_input_node_name = 2;
  for (int i = 0; i < this->graph_input_node_name_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_input_node_name(i).data(), this->graph_input_node_name(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RemoteFusedGraphExecuteInfo.graph_input_node_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->graph_input_node_name(i), target);
  }

  // repeated string graph_output_node_name = 3;
  for (int i = 0; i < this->graph_output_node_name_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_output_node_name(i).data(), this->graph_output_node_name(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RemoteFusedGraphExecuteInfo.graph_output_node_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->graph_output_node_name(i), target);
  }

  // optional string executor_name = 4;
  if (this->executor_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->executor_name().data(), this->executor_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RemoteFusedGraphExecuteInfo.executor_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->executor_name(), target);
  }

  // optional bytes serialized_executor_parameters = 5;
  if (this->serialized_executor_parameters().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->serialized_executor_parameters(), target);
  }

  // repeated .tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto default_graph_input_tensor_shape = 6;
  for (unsigned int i = 0, n = this->default_graph_input_tensor_shape_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->default_graph_input_tensor_shape(i), false, target);
  }

  // repeated .tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto default_graph_output_tensor_shape = 7;
  for (unsigned int i = 0, n = this->default_graph_output_tensor_shape_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->default_graph_output_tensor_shape(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.RemoteFusedGraphExecuteInfo)
  return target;
}

size_t RemoteFusedGraphExecuteInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.RemoteFusedGraphExecuteInfo)
  size_t total_size = 0;

  // optional .tensorflow.GraphDef remote_graph = 1;
  if (this->has_remote_graph()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->remote_graph_);
  }

  // optional string executor_name = 4;
  if (this->executor_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->executor_name());
  }

  // optional bytes serialized_executor_parameters = 5;
  if (this->serialized_executor_parameters().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->serialized_executor_parameters());
  }

  // repeated string graph_input_node_name = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->graph_input_node_name_size());
  for (int i = 0; i < this->graph_input_node_name_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->graph_input_node_name(i));
  }

  // repeated string graph_output_node_name = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->graph_output_node_name_size());
  for (int i = 0; i < this->graph_output_node_name_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->graph_output_node_name(i));
  }

  // repeated .tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto default_graph_input_tensor_shape = 6;
  {
    unsigned int count = this->default_graph_input_tensor_shape_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->default_graph_input_tensor_shape(i));
    }
  }

  // repeated .tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto default_graph_output_tensor_shape = 7;
  {
    unsigned int count = this->default_graph_output_tensor_shape_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->default_graph_output_tensor_shape(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoteFusedGraphExecuteInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.RemoteFusedGraphExecuteInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RemoteFusedGraphExecuteInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoteFusedGraphExecuteInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.RemoteFusedGraphExecuteInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.RemoteFusedGraphExecuteInfo)
    UnsafeMergeFrom(*source);
  }
}

void RemoteFusedGraphExecuteInfo::MergeFrom(const RemoteFusedGraphExecuteInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.RemoteFusedGraphExecuteInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RemoteFusedGraphExecuteInfo::UnsafeMergeFrom(const RemoteFusedGraphExecuteInfo& from) {
  GOOGLE_DCHECK(&from != this);
  graph_input_node_name_.UnsafeMergeFrom(from.graph_input_node_name_);
  graph_output_node_name_.UnsafeMergeFrom(from.graph_output_node_name_);
  default_graph_input_tensor_shape_.MergeFrom(from.default_graph_input_tensor_shape_);
  default_graph_output_tensor_shape_.MergeFrom(from.default_graph_output_tensor_shape_);
  if (from.has_remote_graph()) {
    mutable_remote_graph()->::tensorflow::GraphDef::MergeFrom(from.remote_graph());
  }
  if (from.executor_name().size() > 0) {
    set_executor_name(from.executor_name());
  }
  if (from.serialized_executor_parameters().size() > 0) {
    set_serialized_executor_parameters(from.serialized_executor_parameters());
  }
}

void RemoteFusedGraphExecuteInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.RemoteFusedGraphExecuteInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoteFusedGraphExecuteInfo::CopyFrom(const RemoteFusedGraphExecuteInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.RemoteFusedGraphExecuteInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RemoteFusedGraphExecuteInfo::IsInitialized() const {

  return true;
}

void RemoteFusedGraphExecuteInfo::Swap(RemoteFusedGraphExecuteInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RemoteFusedGraphExecuteInfo temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void RemoteFusedGraphExecuteInfo::UnsafeArenaSwap(RemoteFusedGraphExecuteInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RemoteFusedGraphExecuteInfo::InternalSwap(RemoteFusedGraphExecuteInfo* other) {
  std::swap(remote_graph_, other->remote_graph_);
  graph_input_node_name_.UnsafeArenaSwap(&other->graph_input_node_name_);
  graph_output_node_name_.UnsafeArenaSwap(&other->graph_output_node_name_);
  executor_name_.Swap(&other->executor_name_);
  serialized_executor_parameters_.Swap(&other->serialized_executor_parameters_);
  default_graph_input_tensor_shape_.UnsafeArenaSwap(&other->default_graph_input_tensor_shape_);
  default_graph_output_tensor_shape_.UnsafeArenaSwap(&other->default_graph_output_tensor_shape_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoteFusedGraphExecuteInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoteFusedGraphExecuteInfo_descriptor_;
  metadata.reflection = RemoteFusedGraphExecuteInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoteFusedGraphExecuteInfo_TensorShapeTypeProto

// optional .tensorflow.DataType dtype = 1;
void RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::clear_dtype() {
  dtype_ = 0;
}
::tensorflow::DataType RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::dtype() const {
  // @@protoc_insertion_point(field_get:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto.dtype)
  return static_cast< ::tensorflow::DataType >(dtype_);
}
void RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::set_dtype(::tensorflow::DataType value) {
  
  dtype_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto.dtype)
}

// optional .tensorflow.TensorShapeProto shape = 2;
bool RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::has_shape() const {
  return this != internal_default_instance() && shape_ != NULL;
}
void RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::clear_shape() {
  if (GetArenaNoVirtual() == NULL && shape_ != NULL) delete shape_;
  shape_ = NULL;
}
const ::tensorflow::TensorShapeProto& RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::shape() const {
  // @@protoc_insertion_point(field_get:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto.shape)
  return shape_ != NULL ? *shape_
                         : *::tensorflow::TensorShapeProto::internal_default_instance();
}
::tensorflow::TensorShapeProto* RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::mutable_shape() {
  
  if (shape_ == NULL) {
    _slow_mutable_shape();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto.shape)
  return shape_;
}
::tensorflow::TensorShapeProto* RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::release_shape() {
  // @@protoc_insertion_point(field_release:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto.shape)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_shape();
  } else {
    ::tensorflow::TensorShapeProto* temp = shape_;
    shape_ = NULL;
    return temp;
  }
}
 void RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::set_allocated_shape(::tensorflow::TensorShapeProto* shape) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete shape_;
  }
  if (shape != NULL) {
    _slow_set_allocated_shape(message_arena, &shape);
  }
  shape_ = shape;
  if (shape) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto.shape)
}

inline const RemoteFusedGraphExecuteInfo_TensorShapeTypeProto* RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::internal_default_instance() {
  return &RemoteFusedGraphExecuteInfo_TensorShapeTypeProto_default_instance_.get();
}
// -------------------------------------------------------------------

// RemoteFusedGraphExecuteInfo

// optional .tensorflow.GraphDef remote_graph = 1;
bool RemoteFusedGraphExecuteInfo::has_remote_graph() const {
  return this != internal_default_instance() && remote_graph_ != NULL;
}
void RemoteFusedGraphExecuteInfo::clear_remote_graph() {
  if (GetArenaNoVirtual() == NULL && remote_graph_ != NULL) delete remote_graph_;
  remote_graph_ = NULL;
}
const ::tensorflow::GraphDef& RemoteFusedGraphExecuteInfo::remote_graph() const {
  // @@protoc_insertion_point(field_get:tensorflow.RemoteFusedGraphExecuteInfo.remote_graph)
  return remote_graph_ != NULL ? *remote_graph_
                         : *::tensorflow::GraphDef::internal_default_instance();
}
::tensorflow::GraphDef* RemoteFusedGraphExecuteInfo::mutable_remote_graph() {
  
  if (remote_graph_ == NULL) {
    _slow_mutable_remote_graph();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.RemoteFusedGraphExecuteInfo.remote_graph)
  return remote_graph_;
}
::tensorflow::GraphDef* RemoteFusedGraphExecuteInfo::release_remote_graph() {
  // @@protoc_insertion_point(field_release:tensorflow.RemoteFusedGraphExecuteInfo.remote_graph)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_remote_graph();
  } else {
    ::tensorflow::GraphDef* temp = remote_graph_;
    remote_graph_ = NULL;
    return temp;
  }
}
 void RemoteFusedGraphExecuteInfo::set_allocated_remote_graph(::tensorflow::GraphDef* remote_graph) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete remote_graph_;
  }
  if (remote_graph != NULL) {
    _slow_set_allocated_remote_graph(message_arena, &remote_graph);
  }
  remote_graph_ = remote_graph;
  if (remote_graph) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RemoteFusedGraphExecuteInfo.remote_graph)
}

// repeated string graph_input_node_name = 2;
int RemoteFusedGraphExecuteInfo::graph_input_node_name_size() const {
  return graph_input_node_name_.size();
}
void RemoteFusedGraphExecuteInfo::clear_graph_input_node_name() {
  graph_input_node_name_.Clear();
}
const ::std::string& RemoteFusedGraphExecuteInfo::graph_input_node_name(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.RemoteFusedGraphExecuteInfo.graph_input_node_name)
  return graph_input_node_name_.Get(index);
}
::std::string* RemoteFusedGraphExecuteInfo::mutable_graph_input_node_name(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.RemoteFusedGraphExecuteInfo.graph_input_node_name)
  return graph_input_node_name_.Mutable(index);
}
void RemoteFusedGraphExecuteInfo::set_graph_input_node_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.RemoteFusedGraphExecuteInfo.graph_input_node_name)
  graph_input_node_name_.Mutable(index)->assign(value);
}
void RemoteFusedGraphExecuteInfo::set_graph_input_node_name(int index, const char* value) {
  graph_input_node_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.RemoteFusedGraphExecuteInfo.graph_input_node_name)
}
void RemoteFusedGraphExecuteInfo::set_graph_input_node_name(int index, const char* value, size_t size) {
  graph_input_node_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.RemoteFusedGraphExecuteInfo.graph_input_node_name)
}
::std::string* RemoteFusedGraphExecuteInfo::add_graph_input_node_name() {
  // @@protoc_insertion_point(field_add_mutable:tensorflow.RemoteFusedGraphExecuteInfo.graph_input_node_name)
  return graph_input_node_name_.Add();
}
void RemoteFusedGraphExecuteInfo::add_graph_input_node_name(const ::std::string& value) {
  graph_input_node_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.RemoteFusedGraphExecuteInfo.graph_input_node_name)
}
void RemoteFusedGraphExecuteInfo::add_graph_input_node_name(const char* value) {
  graph_input_node_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.RemoteFusedGraphExecuteInfo.graph_input_node_name)
}
void RemoteFusedGraphExecuteInfo::add_graph_input_node_name(const char* value, size_t size) {
  graph_input_node_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.RemoteFusedGraphExecuteInfo.graph_input_node_name)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
RemoteFusedGraphExecuteInfo::graph_input_node_name() const {
  // @@protoc_insertion_point(field_list:tensorflow.RemoteFusedGraphExecuteInfo.graph_input_node_name)
  return graph_input_node_name_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
RemoteFusedGraphExecuteInfo::mutable_graph_input_node_name() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.RemoteFusedGraphExecuteInfo.graph_input_node_name)
  return &graph_input_node_name_;
}

// repeated string graph_output_node_name = 3;
int RemoteFusedGraphExecuteInfo::graph_output_node_name_size() const {
  return graph_output_node_name_.size();
}
void RemoteFusedGraphExecuteInfo::clear_graph_output_node_name() {
  graph_output_node_name_.Clear();
}
const ::std::string& RemoteFusedGraphExecuteInfo::graph_output_node_name(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.RemoteFusedGraphExecuteInfo.graph_output_node_name)
  return graph_output_node_name_.Get(index);
}
::std::string* RemoteFusedGraphExecuteInfo::mutable_graph_output_node_name(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.RemoteFusedGraphExecuteInfo.graph_output_node_name)
  return graph_output_node_name_.Mutable(index);
}
void RemoteFusedGraphExecuteInfo::set_graph_output_node_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.RemoteFusedGraphExecuteInfo.graph_output_node_name)
  graph_output_node_name_.Mutable(index)->assign(value);
}
void RemoteFusedGraphExecuteInfo::set_graph_output_node_name(int index, const char* value) {
  graph_output_node_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.RemoteFusedGraphExecuteInfo.graph_output_node_name)
}
void RemoteFusedGraphExecuteInfo::set_graph_output_node_name(int index, const char* value, size_t size) {
  graph_output_node_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.RemoteFusedGraphExecuteInfo.graph_output_node_name)
}
::std::string* RemoteFusedGraphExecuteInfo::add_graph_output_node_name() {
  // @@protoc_insertion_point(field_add_mutable:tensorflow.RemoteFusedGraphExecuteInfo.graph_output_node_name)
  return graph_output_node_name_.Add();
}
void RemoteFusedGraphExecuteInfo::add_graph_output_node_name(const ::std::string& value) {
  graph_output_node_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.RemoteFusedGraphExecuteInfo.graph_output_node_name)
}
void RemoteFusedGraphExecuteInfo::add_graph_output_node_name(const char* value) {
  graph_output_node_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.RemoteFusedGraphExecuteInfo.graph_output_node_name)
}
void RemoteFusedGraphExecuteInfo::add_graph_output_node_name(const char* value, size_t size) {
  graph_output_node_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.RemoteFusedGraphExecuteInfo.graph_output_node_name)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
RemoteFusedGraphExecuteInfo::graph_output_node_name() const {
  // @@protoc_insertion_point(field_list:tensorflow.RemoteFusedGraphExecuteInfo.graph_output_node_name)
  return graph_output_node_name_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
RemoteFusedGraphExecuteInfo::mutable_graph_output_node_name() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.RemoteFusedGraphExecuteInfo.graph_output_node_name)
  return &graph_output_node_name_;
}

// optional string executor_name = 4;
void RemoteFusedGraphExecuteInfo::clear_executor_name() {
  executor_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& RemoteFusedGraphExecuteInfo::executor_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.RemoteFusedGraphExecuteInfo.executor_name)
  return executor_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RemoteFusedGraphExecuteInfo::set_executor_name(const ::std::string& value) {
  
  executor_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.RemoteFusedGraphExecuteInfo.executor_name)
}
void RemoteFusedGraphExecuteInfo::set_executor_name(const char* value) {
  
  executor_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.RemoteFusedGraphExecuteInfo.executor_name)
}
void RemoteFusedGraphExecuteInfo::set_executor_name(const char* value,
    size_t size) {
  
  executor_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.RemoteFusedGraphExecuteInfo.executor_name)
}
::std::string* RemoteFusedGraphExecuteInfo::mutable_executor_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.RemoteFusedGraphExecuteInfo.executor_name)
  return executor_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* RemoteFusedGraphExecuteInfo::release_executor_name() {
  // @@protoc_insertion_point(field_release:tensorflow.RemoteFusedGraphExecuteInfo.executor_name)
  
  return executor_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* RemoteFusedGraphExecuteInfo::unsafe_arena_release_executor_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.RemoteFusedGraphExecuteInfo.executor_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return executor_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void RemoteFusedGraphExecuteInfo::set_allocated_executor_name(::std::string* executor_name) {
  if (executor_name != NULL) {
    
  } else {
    
  }
  executor_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), executor_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RemoteFusedGraphExecuteInfo.executor_name)
}
void RemoteFusedGraphExecuteInfo::unsafe_arena_set_allocated_executor_name(
    ::std::string* executor_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (executor_name != NULL) {
    
  } else {
    
  }
  executor_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      executor_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RemoteFusedGraphExecuteInfo.executor_name)
}

// optional bytes serialized_executor_parameters = 5;
void RemoteFusedGraphExecuteInfo::clear_serialized_executor_parameters() {
  serialized_executor_parameters_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& RemoteFusedGraphExecuteInfo::serialized_executor_parameters() const {
  // @@protoc_insertion_point(field_get:tensorflow.RemoteFusedGraphExecuteInfo.serialized_executor_parameters)
  return serialized_executor_parameters_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RemoteFusedGraphExecuteInfo::set_serialized_executor_parameters(const ::std::string& value) {
  
  serialized_executor_parameters_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.RemoteFusedGraphExecuteInfo.serialized_executor_parameters)
}
void RemoteFusedGraphExecuteInfo::set_serialized_executor_parameters(const char* value) {
  
  serialized_executor_parameters_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.RemoteFusedGraphExecuteInfo.serialized_executor_parameters)
}
void RemoteFusedGraphExecuteInfo::set_serialized_executor_parameters(const void* value,
    size_t size) {
  
  serialized_executor_parameters_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.RemoteFusedGraphExecuteInfo.serialized_executor_parameters)
}
::std::string* RemoteFusedGraphExecuteInfo::mutable_serialized_executor_parameters() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.RemoteFusedGraphExecuteInfo.serialized_executor_parameters)
  return serialized_executor_parameters_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* RemoteFusedGraphExecuteInfo::release_serialized_executor_parameters() {
  // @@protoc_insertion_point(field_release:tensorflow.RemoteFusedGraphExecuteInfo.serialized_executor_parameters)
  
  return serialized_executor_parameters_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* RemoteFusedGraphExecuteInfo::unsafe_arena_release_serialized_executor_parameters() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.RemoteFusedGraphExecuteInfo.serialized_executor_parameters)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return serialized_executor_parameters_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void RemoteFusedGraphExecuteInfo::set_allocated_serialized_executor_parameters(::std::string* serialized_executor_parameters) {
  if (serialized_executor_parameters != NULL) {
    
  } else {
    
  }
  serialized_executor_parameters_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serialized_executor_parameters,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RemoteFusedGraphExecuteInfo.serialized_executor_parameters)
}
void RemoteFusedGraphExecuteInfo::unsafe_arena_set_allocated_serialized_executor_parameters(
    ::std::string* serialized_executor_parameters) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (serialized_executor_parameters != NULL) {
    
  } else {
    
  }
  serialized_executor_parameters_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      serialized_executor_parameters, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RemoteFusedGraphExecuteInfo.serialized_executor_parameters)
}

// repeated .tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto default_graph_input_tensor_shape = 6;
int RemoteFusedGraphExecuteInfo::default_graph_input_tensor_shape_size() const {
  return default_graph_input_tensor_shape_.size();
}
void RemoteFusedGraphExecuteInfo::clear_default_graph_input_tensor_shape() {
  default_graph_input_tensor_shape_.Clear();
}
const ::tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto& RemoteFusedGraphExecuteInfo::default_graph_input_tensor_shape(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.RemoteFusedGraphExecuteInfo.default_graph_input_tensor_shape)
  return default_graph_input_tensor_shape_.Get(index);
}
::tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto* RemoteFusedGraphExecuteInfo::mutable_default_graph_input_tensor_shape(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.RemoteFusedGraphExecuteInfo.default_graph_input_tensor_shape)
  return default_graph_input_tensor_shape_.Mutable(index);
}
::tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto* RemoteFusedGraphExecuteInfo::add_default_graph_input_tensor_shape() {
  // @@protoc_insertion_point(field_add:tensorflow.RemoteFusedGraphExecuteInfo.default_graph_input_tensor_shape)
  return default_graph_input_tensor_shape_.Add();
}
::google::protobuf::RepeatedPtrField< ::tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto >*
RemoteFusedGraphExecuteInfo::mutable_default_graph_input_tensor_shape() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.RemoteFusedGraphExecuteInfo.default_graph_input_tensor_shape)
  return &default_graph_input_tensor_shape_;
}
const ::google::protobuf::RepeatedPtrField< ::tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto >&
RemoteFusedGraphExecuteInfo::default_graph_input_tensor_shape() const {
  // @@protoc_insertion_point(field_list:tensorflow.RemoteFusedGraphExecuteInfo.default_graph_input_tensor_shape)
  return default_graph_input_tensor_shape_;
}

// repeated .tensorflow.RemoteFusedGraphExecuteInfo.TensorShapeTypeProto default_graph_output_tensor_shape = 7;
int RemoteFusedGraphExecuteInfo::default_graph_output_tensor_shape_size() const {
  return default_graph_output_tensor_shape_.size();
}
void RemoteFusedGraphExecuteInfo::clear_default_graph_output_tensor_shape() {
  default_graph_output_tensor_shape_.Clear();
}
const ::tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto& RemoteFusedGraphExecuteInfo::default_graph_output_tensor_shape(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.RemoteFusedGraphExecuteInfo.default_graph_output_tensor_shape)
  return default_graph_output_tensor_shape_.Get(index);
}
::tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto* RemoteFusedGraphExecuteInfo::mutable_default_graph_output_tensor_shape(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.RemoteFusedGraphExecuteInfo.default_graph_output_tensor_shape)
  return default_graph_output_tensor_shape_.Mutable(index);
}
::tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto* RemoteFusedGraphExecuteInfo::add_default_graph_output_tensor_shape() {
  // @@protoc_insertion_point(field_add:tensorflow.RemoteFusedGraphExecuteInfo.default_graph_output_tensor_shape)
  return default_graph_output_tensor_shape_.Add();
}
::google::protobuf::RepeatedPtrField< ::tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto >*
RemoteFusedGraphExecuteInfo::mutable_default_graph_output_tensor_shape() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.RemoteFusedGraphExecuteInfo.default_graph_output_tensor_shape)
  return &default_graph_output_tensor_shape_;
}
const ::google::protobuf::RepeatedPtrField< ::tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto >&
RemoteFusedGraphExecuteInfo::default_graph_output_tensor_shape() const {
  // @@protoc_insertion_point(field_list:tensorflow.RemoteFusedGraphExecuteInfo.default_graph_output_tensor_shape)
  return default_graph_output_tensor_shape_;
}

inline const RemoteFusedGraphExecuteInfo* RemoteFusedGraphExecuteInfo::internal_default_instance() {
  return &RemoteFusedGraphExecuteInfo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)
