// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/variable.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tensorflow/core/framework/variable.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tensorflow {

namespace {

const ::google::protobuf::Descriptor* VariableDef_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VariableDef_reflection_ = NULL;
const ::google::protobuf::Descriptor* SaveSliceInfoDef_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SaveSliceInfoDef_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_tensorflow_2fcore_2fframework_2fvariable_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_tensorflow_2fcore_2fframework_2fvariable_2eproto() {
  protobuf_AddDesc_tensorflow_2fcore_2fframework_2fvariable_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "tensorflow/core/framework/variable.proto");
  GOOGLE_CHECK(file != NULL);
  VariableDef_descriptor_ = file->message_type(0);
  static const int VariableDef_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VariableDef, variable_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VariableDef, initializer_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VariableDef, snapshot_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VariableDef, save_slice_info_def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VariableDef, is_resource_),
  };
  VariableDef_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VariableDef_descriptor_,
      VariableDef::internal_default_instance(),
      VariableDef_offsets_,
      -1,
      -1,
      -1,
      sizeof(VariableDef),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VariableDef, _internal_metadata_));
  SaveSliceInfoDef_descriptor_ = file->message_type(1);
  static const int SaveSliceInfoDef_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveSliceInfoDef, full_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveSliceInfoDef, full_shape_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveSliceInfoDef, var_offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveSliceInfoDef, var_shape_),
  };
  SaveSliceInfoDef_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SaveSliceInfoDef_descriptor_,
      SaveSliceInfoDef::internal_default_instance(),
      SaveSliceInfoDef_offsets_,
      -1,
      -1,
      -1,
      sizeof(SaveSliceInfoDef),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveSliceInfoDef, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_tensorflow_2fcore_2fframework_2fvariable_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VariableDef_descriptor_, VariableDef::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SaveSliceInfoDef_descriptor_, SaveSliceInfoDef::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_tensorflow_2fcore_2fframework_2fvariable_2eproto() {
  VariableDef_default_instance_.Shutdown();
  delete VariableDef_reflection_;
  SaveSliceInfoDef_default_instance_.Shutdown();
  delete SaveSliceInfoDef_reflection_;
}

void protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fvariable_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  VariableDef_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SaveSliceInfoDef_default_instance_.DefaultConstruct();
  VariableDef_default_instance_.get_mutable()->InitAsDefaultInstance();
  SaveSliceInfoDef_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fvariable_2eproto_once_);
void protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fvariable_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fvariable_2eproto_once_,
                 &protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fvariable_2eproto_impl);
}
void protobuf_AddDesc_tensorflow_2fcore_2fframework_2fvariable_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fvariable_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n(tensorflow/core/framework/variable.pro"
    "to\022\ntensorflow\"\245\001\n\013VariableDef\022\025\n\rvariab"
    "le_name\030\001 \001(\t\022\030\n\020initializer_name\030\002 \001(\t\022"
    "\025\n\rsnapshot_name\030\003 \001(\t\0229\n\023save_slice_inf"
    "o_def\030\004 \001(\0132\034.tensorflow.SaveSliceInfoDe"
    "f\022\023\n\013is_resource\030\005 \001(\010\"`\n\020SaveSliceInfoD"
    "ef\022\021\n\tfull_name\030\001 \001(\t\022\022\n\nfull_shape\030\002 \003("
    "\003\022\022\n\nvar_offset\030\003 \003(\003\022\021\n\tvar_shape\030\004 \003(\003"
    "B/\n\030org.tensorflow.frameworkB\016VariablePr"
    "otosP\001\370\001\001b\006proto3", 377);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/framework/variable.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_tensorflow_2fcore_2fframework_2fvariable_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_tensorflow_2fcore_2fframework_2fvariable_2eproto_once_);
void protobuf_AddDesc_tensorflow_2fcore_2fframework_2fvariable_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_tensorflow_2fcore_2fframework_2fvariable_2eproto_once_,
                 &protobuf_AddDesc_tensorflow_2fcore_2fframework_2fvariable_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_tensorflow_2fcore_2fframework_2fvariable_2eproto {
  StaticDescriptorInitializer_tensorflow_2fcore_2fframework_2fvariable_2eproto() {
    protobuf_AddDesc_tensorflow_2fcore_2fframework_2fvariable_2eproto();
  }
} static_descriptor_initializer_tensorflow_2fcore_2fframework_2fvariable_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

void VariableDef::_slow_mutable_save_slice_info_def() {
  save_slice_info_def_ = ::google::protobuf::Arena::CreateMessage< ::tensorflow::SaveSliceInfoDef >(
      GetArenaNoVirtual());
}
::tensorflow::SaveSliceInfoDef* VariableDef::_slow_release_save_slice_info_def() {
  if (save_slice_info_def_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::SaveSliceInfoDef* temp = new ::tensorflow::SaveSliceInfoDef(*save_slice_info_def_);
    save_slice_info_def_ = NULL;
    return temp;
  }
}
::tensorflow::SaveSliceInfoDef* VariableDef::unsafe_arena_release_save_slice_info_def() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.VariableDef.save_slice_info_def)
  
  ::tensorflow::SaveSliceInfoDef* temp = save_slice_info_def_;
  save_slice_info_def_ = NULL;
  return temp;
}
void VariableDef::_slow_set_allocated_save_slice_info_def(
    ::google::protobuf::Arena* message_arena, ::tensorflow::SaveSliceInfoDef** save_slice_info_def) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*save_slice_info_def) == NULL) {
      message_arena->Own(*save_slice_info_def);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*save_slice_info_def)) {
      ::tensorflow::SaveSliceInfoDef* new_save_slice_info_def = 
            ::google::protobuf::Arena::CreateMessage< ::tensorflow::SaveSliceInfoDef >(
            message_arena);
      new_save_slice_info_def->CopyFrom(**save_slice_info_def);
      *save_slice_info_def = new_save_slice_info_def;
    }
}
void VariableDef::unsafe_arena_set_allocated_save_slice_info_def(
    ::tensorflow::SaveSliceInfoDef* save_slice_info_def) {
  if (GetArenaNoVirtual() == NULL) {
    delete save_slice_info_def_;
  }
  save_slice_info_def_ = save_slice_info_def;
  if (save_slice_info_def) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.VariableDef.save_slice_info_def)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VariableDef::kVariableNameFieldNumber;
const int VariableDef::kInitializerNameFieldNumber;
const int VariableDef::kSnapshotNameFieldNumber;
const int VariableDef::kSaveSliceInfoDefFieldNumber;
const int VariableDef::kIsResourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VariableDef::VariableDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fvariable_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.VariableDef)
}
VariableDef::VariableDef(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fvariable_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.VariableDef)
}

void VariableDef::InitAsDefaultInstance() {
  save_slice_info_def_ = const_cast< ::tensorflow::SaveSliceInfoDef*>(
      ::tensorflow::SaveSliceInfoDef::internal_default_instance());
}

VariableDef::VariableDef(const VariableDef& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.VariableDef)
}

void VariableDef::SharedCtor() {
  variable_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  initializer_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  snapshot_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  save_slice_info_def_ = NULL;
  is_resource_ = false;
  _cached_size_ = 0;
}

VariableDef::~VariableDef() {
  // @@protoc_insertion_point(destructor:tensorflow.VariableDef)
  SharedDtor();
}

void VariableDef::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  variable_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  initializer_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  snapshot_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != &VariableDef_default_instance_.get()) {
    delete save_slice_info_def_;
  }
}

void VariableDef::ArenaDtor(void* object) {
  VariableDef* _this = reinterpret_cast< VariableDef* >(object);
  (void)_this;
}
void VariableDef::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void VariableDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VariableDef::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VariableDef_descriptor_;
}

const VariableDef& VariableDef::default_instance() {
  protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fvariable_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<VariableDef> VariableDef_default_instance_;

VariableDef* VariableDef::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<VariableDef>(arena);
}

void VariableDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.VariableDef)
  variable_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  initializer_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  snapshot_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && save_slice_info_def_ != NULL) delete save_slice_info_def_;
  save_slice_info_def_ = NULL;
  is_resource_ = false;
}

bool VariableDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.VariableDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string variable_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_variable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->variable_name().data(), this->variable_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.VariableDef.variable_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_initializer_name;
        break;
      }

      // optional string initializer_name = 2;
      case 2: {
        if (tag == 18) {
         parse_initializer_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_initializer_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->initializer_name().data(), this->initializer_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.VariableDef.initializer_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_snapshot_name;
        break;
      }

      // optional string snapshot_name = 3;
      case 3: {
        if (tag == 26) {
         parse_snapshot_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_snapshot_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->snapshot_name().data(), this->snapshot_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.VariableDef.snapshot_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_save_slice_info_def;
        break;
      }

      // optional .tensorflow.SaveSliceInfoDef save_slice_info_def = 4;
      case 4: {
        if (tag == 34) {
         parse_save_slice_info_def:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_save_slice_info_def()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_is_resource;
        break;
      }

      // optional bool is_resource = 5;
      case 5: {
        if (tag == 40) {
         parse_is_resource:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_resource_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.VariableDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.VariableDef)
  return false;
#undef DO_
}

void VariableDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.VariableDef)
  // optional string variable_name = 1;
  if (this->variable_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->variable_name().data(), this->variable_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.VariableDef.variable_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->variable_name(), output);
  }

  // optional string initializer_name = 2;
  if (this->initializer_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->initializer_name().data(), this->initializer_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.VariableDef.initializer_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->initializer_name(), output);
  }

  // optional string snapshot_name = 3;
  if (this->snapshot_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->snapshot_name().data(), this->snapshot_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.VariableDef.snapshot_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->snapshot_name(), output);
  }

  // optional .tensorflow.SaveSliceInfoDef save_slice_info_def = 4;
  if (this->has_save_slice_info_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->save_slice_info_def_, output);
  }

  // optional bool is_resource = 5;
  if (this->is_resource() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_resource(), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.VariableDef)
}

::google::protobuf::uint8* VariableDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.VariableDef)
  // optional string variable_name = 1;
  if (this->variable_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->variable_name().data(), this->variable_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.VariableDef.variable_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->variable_name(), target);
  }

  // optional string initializer_name = 2;
  if (this->initializer_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->initializer_name().data(), this->initializer_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.VariableDef.initializer_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->initializer_name(), target);
  }

  // optional string snapshot_name = 3;
  if (this->snapshot_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->snapshot_name().data(), this->snapshot_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.VariableDef.snapshot_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->snapshot_name(), target);
  }

  // optional .tensorflow.SaveSliceInfoDef save_slice_info_def = 4;
  if (this->has_save_slice_info_def()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->save_slice_info_def_, false, target);
  }

  // optional bool is_resource = 5;
  if (this->is_resource() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_resource(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.VariableDef)
  return target;
}

size_t VariableDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.VariableDef)
  size_t total_size = 0;

  // optional string variable_name = 1;
  if (this->variable_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->variable_name());
  }

  // optional string initializer_name = 2;
  if (this->initializer_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->initializer_name());
  }

  // optional string snapshot_name = 3;
  if (this->snapshot_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->snapshot_name());
  }

  // optional .tensorflow.SaveSliceInfoDef save_slice_info_def = 4;
  if (this->has_save_slice_info_def()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->save_slice_info_def_);
  }

  // optional bool is_resource = 5;
  if (this->is_resource() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VariableDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.VariableDef)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const VariableDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VariableDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.VariableDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.VariableDef)
    UnsafeMergeFrom(*source);
  }
}

void VariableDef::MergeFrom(const VariableDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.VariableDef)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void VariableDef::UnsafeMergeFrom(const VariableDef& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.variable_name().size() > 0) {
    set_variable_name(from.variable_name());
  }
  if (from.initializer_name().size() > 0) {
    set_initializer_name(from.initializer_name());
  }
  if (from.snapshot_name().size() > 0) {
    set_snapshot_name(from.snapshot_name());
  }
  if (from.has_save_slice_info_def()) {
    mutable_save_slice_info_def()->::tensorflow::SaveSliceInfoDef::MergeFrom(from.save_slice_info_def());
  }
  if (from.is_resource() != 0) {
    set_is_resource(from.is_resource());
  }
}

void VariableDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.VariableDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VariableDef::CopyFrom(const VariableDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.VariableDef)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool VariableDef::IsInitialized() const {

  return true;
}

void VariableDef::Swap(VariableDef* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    VariableDef temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void VariableDef::UnsafeArenaSwap(VariableDef* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void VariableDef::InternalSwap(VariableDef* other) {
  variable_name_.Swap(&other->variable_name_);
  initializer_name_.Swap(&other->initializer_name_);
  snapshot_name_.Swap(&other->snapshot_name_);
  std::swap(save_slice_info_def_, other->save_slice_info_def_);
  std::swap(is_resource_, other->is_resource_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VariableDef::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VariableDef_descriptor_;
  metadata.reflection = VariableDef_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VariableDef

// optional string variable_name = 1;
void VariableDef::clear_variable_name() {
  variable_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& VariableDef::variable_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.VariableDef.variable_name)
  return variable_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VariableDef::set_variable_name(const ::std::string& value) {
  
  variable_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.VariableDef.variable_name)
}
void VariableDef::set_variable_name(const char* value) {
  
  variable_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.VariableDef.variable_name)
}
void VariableDef::set_variable_name(const char* value,
    size_t size) {
  
  variable_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.VariableDef.variable_name)
}
::std::string* VariableDef::mutable_variable_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.VariableDef.variable_name)
  return variable_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* VariableDef::release_variable_name() {
  // @@protoc_insertion_point(field_release:tensorflow.VariableDef.variable_name)
  
  return variable_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* VariableDef::unsafe_arena_release_variable_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.VariableDef.variable_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return variable_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void VariableDef::set_allocated_variable_name(::std::string* variable_name) {
  if (variable_name != NULL) {
    
  } else {
    
  }
  variable_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), variable_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.VariableDef.variable_name)
}
void VariableDef::unsafe_arena_set_allocated_variable_name(
    ::std::string* variable_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (variable_name != NULL) {
    
  } else {
    
  }
  variable_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      variable_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.VariableDef.variable_name)
}

// optional string initializer_name = 2;
void VariableDef::clear_initializer_name() {
  initializer_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& VariableDef::initializer_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.VariableDef.initializer_name)
  return initializer_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VariableDef::set_initializer_name(const ::std::string& value) {
  
  initializer_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.VariableDef.initializer_name)
}
void VariableDef::set_initializer_name(const char* value) {
  
  initializer_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.VariableDef.initializer_name)
}
void VariableDef::set_initializer_name(const char* value,
    size_t size) {
  
  initializer_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.VariableDef.initializer_name)
}
::std::string* VariableDef::mutable_initializer_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.VariableDef.initializer_name)
  return initializer_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* VariableDef::release_initializer_name() {
  // @@protoc_insertion_point(field_release:tensorflow.VariableDef.initializer_name)
  
  return initializer_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* VariableDef::unsafe_arena_release_initializer_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.VariableDef.initializer_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return initializer_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void VariableDef::set_allocated_initializer_name(::std::string* initializer_name) {
  if (initializer_name != NULL) {
    
  } else {
    
  }
  initializer_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), initializer_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.VariableDef.initializer_name)
}
void VariableDef::unsafe_arena_set_allocated_initializer_name(
    ::std::string* initializer_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (initializer_name != NULL) {
    
  } else {
    
  }
  initializer_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      initializer_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.VariableDef.initializer_name)
}

// optional string snapshot_name = 3;
void VariableDef::clear_snapshot_name() {
  snapshot_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& VariableDef::snapshot_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.VariableDef.snapshot_name)
  return snapshot_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VariableDef::set_snapshot_name(const ::std::string& value) {
  
  snapshot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.VariableDef.snapshot_name)
}
void VariableDef::set_snapshot_name(const char* value) {
  
  snapshot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.VariableDef.snapshot_name)
}
void VariableDef::set_snapshot_name(const char* value,
    size_t size) {
  
  snapshot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.VariableDef.snapshot_name)
}
::std::string* VariableDef::mutable_snapshot_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.VariableDef.snapshot_name)
  return snapshot_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* VariableDef::release_snapshot_name() {
  // @@protoc_insertion_point(field_release:tensorflow.VariableDef.snapshot_name)
  
  return snapshot_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* VariableDef::unsafe_arena_release_snapshot_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.VariableDef.snapshot_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return snapshot_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void VariableDef::set_allocated_snapshot_name(::std::string* snapshot_name) {
  if (snapshot_name != NULL) {
    
  } else {
    
  }
  snapshot_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), snapshot_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.VariableDef.snapshot_name)
}
void VariableDef::unsafe_arena_set_allocated_snapshot_name(
    ::std::string* snapshot_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (snapshot_name != NULL) {
    
  } else {
    
  }
  snapshot_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      snapshot_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.VariableDef.snapshot_name)
}

// optional .tensorflow.SaveSliceInfoDef save_slice_info_def = 4;
bool VariableDef::has_save_slice_info_def() const {
  return this != internal_default_instance() && save_slice_info_def_ != NULL;
}
void VariableDef::clear_save_slice_info_def() {
  if (GetArenaNoVirtual() == NULL && save_slice_info_def_ != NULL) delete save_slice_info_def_;
  save_slice_info_def_ = NULL;
}
const ::tensorflow::SaveSliceInfoDef& VariableDef::save_slice_info_def() const {
  // @@protoc_insertion_point(field_get:tensorflow.VariableDef.save_slice_info_def)
  return save_slice_info_def_ != NULL ? *save_slice_info_def_
                         : *::tensorflow::SaveSliceInfoDef::internal_default_instance();
}
::tensorflow::SaveSliceInfoDef* VariableDef::mutable_save_slice_info_def() {
  
  if (save_slice_info_def_ == NULL) {
    _slow_mutable_save_slice_info_def();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.VariableDef.save_slice_info_def)
  return save_slice_info_def_;
}
::tensorflow::SaveSliceInfoDef* VariableDef::release_save_slice_info_def() {
  // @@protoc_insertion_point(field_release:tensorflow.VariableDef.save_slice_info_def)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_save_slice_info_def();
  } else {
    ::tensorflow::SaveSliceInfoDef* temp = save_slice_info_def_;
    save_slice_info_def_ = NULL;
    return temp;
  }
}
 void VariableDef::set_allocated_save_slice_info_def(::tensorflow::SaveSliceInfoDef* save_slice_info_def) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete save_slice_info_def_;
  }
  if (save_slice_info_def != NULL) {
    _slow_set_allocated_save_slice_info_def(message_arena, &save_slice_info_def);
  }
  save_slice_info_def_ = save_slice_info_def;
  if (save_slice_info_def) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.VariableDef.save_slice_info_def)
}

// optional bool is_resource = 5;
void VariableDef::clear_is_resource() {
  is_resource_ = false;
}
bool VariableDef::is_resource() const {
  // @@protoc_insertion_point(field_get:tensorflow.VariableDef.is_resource)
  return is_resource_;
}
void VariableDef::set_is_resource(bool value) {
  
  is_resource_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.VariableDef.is_resource)
}

inline const VariableDef* VariableDef::internal_default_instance() {
  return &VariableDef_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SaveSliceInfoDef::kFullNameFieldNumber;
const int SaveSliceInfoDef::kFullShapeFieldNumber;
const int SaveSliceInfoDef::kVarOffsetFieldNumber;
const int SaveSliceInfoDef::kVarShapeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SaveSliceInfoDef::SaveSliceInfoDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fvariable_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.SaveSliceInfoDef)
}
SaveSliceInfoDef::SaveSliceInfoDef(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  full_shape_(arena),
  var_offset_(arena),
  var_shape_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fvariable_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SaveSliceInfoDef)
}

void SaveSliceInfoDef::InitAsDefaultInstance() {
}

SaveSliceInfoDef::SaveSliceInfoDef(const SaveSliceInfoDef& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.SaveSliceInfoDef)
}

void SaveSliceInfoDef::SharedCtor() {
  full_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SaveSliceInfoDef::~SaveSliceInfoDef() {
  // @@protoc_insertion_point(destructor:tensorflow.SaveSliceInfoDef)
  SharedDtor();
}

void SaveSliceInfoDef::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  full_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void SaveSliceInfoDef::ArenaDtor(void* object) {
  SaveSliceInfoDef* _this = reinterpret_cast< SaveSliceInfoDef* >(object);
  (void)_this;
}
void SaveSliceInfoDef::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SaveSliceInfoDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SaveSliceInfoDef::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SaveSliceInfoDef_descriptor_;
}

const SaveSliceInfoDef& SaveSliceInfoDef::default_instance() {
  protobuf_InitDefaults_tensorflow_2fcore_2fframework_2fvariable_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SaveSliceInfoDef> SaveSliceInfoDef_default_instance_;

SaveSliceInfoDef* SaveSliceInfoDef::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SaveSliceInfoDef>(arena);
}

void SaveSliceInfoDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SaveSliceInfoDef)
  full_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  full_shape_.Clear();
  var_offset_.Clear();
  var_shape_.Clear();
}

bool SaveSliceInfoDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.SaveSliceInfoDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string full_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_full_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->full_name().data(), this->full_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.SaveSliceInfoDef.full_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_full_shape;
        break;
      }

      // repeated int64 full_shape = 2;
      case 2: {
        if (tag == 18) {
         parse_full_shape:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_full_shape())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18, input, this->mutable_full_shape())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_var_offset;
        break;
      }

      // repeated int64 var_offset = 3;
      case 3: {
        if (tag == 26) {
         parse_var_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_var_offset())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 26, input, this->mutable_var_offset())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_var_shape;
        break;
      }

      // repeated int64 var_shape = 4;
      case 4: {
        if (tag == 34) {
         parse_var_shape:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_var_shape())));
        } else if (tag == 32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 34, input, this->mutable_var_shape())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.SaveSliceInfoDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.SaveSliceInfoDef)
  return false;
#undef DO_
}

void SaveSliceInfoDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.SaveSliceInfoDef)
  // optional string full_name = 1;
  if (this->full_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->full_name().data(), this->full_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SaveSliceInfoDef.full_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->full_name(), output);
  }

  // repeated int64 full_shape = 2;
  if (this->full_shape_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_full_shape_cached_byte_size_);
  }
  for (int i = 0; i < this->full_shape_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->full_shape(i), output);
  }

  // repeated int64 var_offset = 3;
  if (this->var_offset_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_var_offset_cached_byte_size_);
  }
  for (int i = 0; i < this->var_offset_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->var_offset(i), output);
  }

  // repeated int64 var_shape = 4;
  if (this->var_shape_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_var_shape_cached_byte_size_);
  }
  for (int i = 0; i < this->var_shape_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->var_shape(i), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.SaveSliceInfoDef)
}

::google::protobuf::uint8* SaveSliceInfoDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SaveSliceInfoDef)
  // optional string full_name = 1;
  if (this->full_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->full_name().data(), this->full_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SaveSliceInfoDef.full_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->full_name(), target);
  }

  // repeated int64 full_shape = 2;
  if (this->full_shape_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _full_shape_cached_byte_size_, target);
  }
  for (int i = 0; i < this->full_shape_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->full_shape(i), target);
  }

  // repeated int64 var_offset = 3;
  if (this->var_offset_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _var_offset_cached_byte_size_, target);
  }
  for (int i = 0; i < this->var_offset_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->var_offset(i), target);
  }

  // repeated int64 var_shape = 4;
  if (this->var_shape_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _var_shape_cached_byte_size_, target);
  }
  for (int i = 0; i < this->var_shape_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->var_shape(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SaveSliceInfoDef)
  return target;
}

size_t SaveSliceInfoDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SaveSliceInfoDef)
  size_t total_size = 0;

  // optional string full_name = 1;
  if (this->full_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->full_name());
  }

  // repeated int64 full_shape = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->full_shape_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->full_shape(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _full_shape_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 var_offset = 3;
  {
    size_t data_size = 0;
    unsigned int count = this->var_offset_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->var_offset(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _var_offset_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 var_shape = 4;
  {
    size_t data_size = 0;
    unsigned int count = this->var_shape_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->var_shape(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _var_shape_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SaveSliceInfoDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.SaveSliceInfoDef)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SaveSliceInfoDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SaveSliceInfoDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.SaveSliceInfoDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.SaveSliceInfoDef)
    UnsafeMergeFrom(*source);
  }
}

void SaveSliceInfoDef::MergeFrom(const SaveSliceInfoDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SaveSliceInfoDef)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SaveSliceInfoDef::UnsafeMergeFrom(const SaveSliceInfoDef& from) {
  GOOGLE_DCHECK(&from != this);
  full_shape_.UnsafeMergeFrom(from.full_shape_);
  var_offset_.UnsafeMergeFrom(from.var_offset_);
  var_shape_.UnsafeMergeFrom(from.var_shape_);
  if (from.full_name().size() > 0) {
    set_full_name(from.full_name());
  }
}

void SaveSliceInfoDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.SaveSliceInfoDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveSliceInfoDef::CopyFrom(const SaveSliceInfoDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SaveSliceInfoDef)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SaveSliceInfoDef::IsInitialized() const {

  return true;
}

void SaveSliceInfoDef::Swap(SaveSliceInfoDef* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SaveSliceInfoDef temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void SaveSliceInfoDef::UnsafeArenaSwap(SaveSliceInfoDef* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SaveSliceInfoDef::InternalSwap(SaveSliceInfoDef* other) {
  full_name_.Swap(&other->full_name_);
  full_shape_.UnsafeArenaSwap(&other->full_shape_);
  var_offset_.UnsafeArenaSwap(&other->var_offset_);
  var_shape_.UnsafeArenaSwap(&other->var_shape_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SaveSliceInfoDef::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SaveSliceInfoDef_descriptor_;
  metadata.reflection = SaveSliceInfoDef_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SaveSliceInfoDef

// optional string full_name = 1;
void SaveSliceInfoDef::clear_full_name() {
  full_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& SaveSliceInfoDef::full_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.SaveSliceInfoDef.full_name)
  return full_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SaveSliceInfoDef::set_full_name(const ::std::string& value) {
  
  full_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.SaveSliceInfoDef.full_name)
}
void SaveSliceInfoDef::set_full_name(const char* value) {
  
  full_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.SaveSliceInfoDef.full_name)
}
void SaveSliceInfoDef::set_full_name(const char* value,
    size_t size) {
  
  full_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.SaveSliceInfoDef.full_name)
}
::std::string* SaveSliceInfoDef::mutable_full_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.SaveSliceInfoDef.full_name)
  return full_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* SaveSliceInfoDef::release_full_name() {
  // @@protoc_insertion_point(field_release:tensorflow.SaveSliceInfoDef.full_name)
  
  return full_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* SaveSliceInfoDef::unsafe_arena_release_full_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.SaveSliceInfoDef.full_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return full_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void SaveSliceInfoDef::set_allocated_full_name(::std::string* full_name) {
  if (full_name != NULL) {
    
  } else {
    
  }
  full_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), full_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SaveSliceInfoDef.full_name)
}
void SaveSliceInfoDef::unsafe_arena_set_allocated_full_name(
    ::std::string* full_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (full_name != NULL) {
    
  } else {
    
  }
  full_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      full_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SaveSliceInfoDef.full_name)
}

// repeated int64 full_shape = 2;
int SaveSliceInfoDef::full_shape_size() const {
  return full_shape_.size();
}
void SaveSliceInfoDef::clear_full_shape() {
  full_shape_.Clear();
}
::google::protobuf::int64 SaveSliceInfoDef::full_shape(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.SaveSliceInfoDef.full_shape)
  return full_shape_.Get(index);
}
void SaveSliceInfoDef::set_full_shape(int index, ::google::protobuf::int64 value) {
  full_shape_.Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.SaveSliceInfoDef.full_shape)
}
void SaveSliceInfoDef::add_full_shape(::google::protobuf::int64 value) {
  full_shape_.Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.SaveSliceInfoDef.full_shape)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
SaveSliceInfoDef::full_shape() const {
  // @@protoc_insertion_point(field_list:tensorflow.SaveSliceInfoDef.full_shape)
  return full_shape_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
SaveSliceInfoDef::mutable_full_shape() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.SaveSliceInfoDef.full_shape)
  return &full_shape_;
}

// repeated int64 var_offset = 3;
int SaveSliceInfoDef::var_offset_size() const {
  return var_offset_.size();
}
void SaveSliceInfoDef::clear_var_offset() {
  var_offset_.Clear();
}
::google::protobuf::int64 SaveSliceInfoDef::var_offset(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.SaveSliceInfoDef.var_offset)
  return var_offset_.Get(index);
}
void SaveSliceInfoDef::set_var_offset(int index, ::google::protobuf::int64 value) {
  var_offset_.Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.SaveSliceInfoDef.var_offset)
}
void SaveSliceInfoDef::add_var_offset(::google::protobuf::int64 value) {
  var_offset_.Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.SaveSliceInfoDef.var_offset)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
SaveSliceInfoDef::var_offset() const {
  // @@protoc_insertion_point(field_list:tensorflow.SaveSliceInfoDef.var_offset)
  return var_offset_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
SaveSliceInfoDef::mutable_var_offset() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.SaveSliceInfoDef.var_offset)
  return &var_offset_;
}

// repeated int64 var_shape = 4;
int SaveSliceInfoDef::var_shape_size() const {
  return var_shape_.size();
}
void SaveSliceInfoDef::clear_var_shape() {
  var_shape_.Clear();
}
::google::protobuf::int64 SaveSliceInfoDef::var_shape(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.SaveSliceInfoDef.var_shape)
  return var_shape_.Get(index);
}
void SaveSliceInfoDef::set_var_shape(int index, ::google::protobuf::int64 value) {
  var_shape_.Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.SaveSliceInfoDef.var_shape)
}
void SaveSliceInfoDef::add_var_shape(::google::protobuf::int64 value) {
  var_shape_.Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.SaveSliceInfoDef.var_shape)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
SaveSliceInfoDef::var_shape() const {
  // @@protoc_insertion_point(field_list:tensorflow.SaveSliceInfoDef.var_shape)
  return var_shape_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
SaveSliceInfoDef::mutable_var_shape() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.SaveSliceInfoDef.var_shape)
  return &var_shape_;
}

inline const SaveSliceInfoDef* SaveSliceInfoDef::internal_default_instance() {
  return &SaveSliceInfoDef_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)
