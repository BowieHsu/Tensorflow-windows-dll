// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/control_flow.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tensorflow/core/protobuf/control_flow.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tensorflow {

namespace {

const ::google::protobuf::Descriptor* ValuesDef_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ValuesDef_reflection_ = NULL;
const ::google::protobuf::Descriptor* ValuesDef_ExternalValuesEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CondContextDef_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CondContextDef_reflection_ = NULL;
const ::google::protobuf::Descriptor* WhileContextDef_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WhileContextDef_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto() {
  protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "tensorflow/core/protobuf/control_flow.proto");
  GOOGLE_CHECK(file != NULL);
  ValuesDef_descriptor_ = file->message_type(0);
  static const int ValuesDef_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValuesDef, values_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValuesDef, external_values_),
  };
  ValuesDef_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ValuesDef_descriptor_,
      ValuesDef::internal_default_instance(),
      ValuesDef_offsets_,
      -1,
      -1,
      -1,
      sizeof(ValuesDef),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValuesDef, _internal_metadata_));
  ValuesDef_ExternalValuesEntry_descriptor_ = ValuesDef_descriptor_->nested_type(0);
  CondContextDef_descriptor_ = file->message_type(1);
  static const int CondContextDef_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondContextDef, context_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondContextDef, pred_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondContextDef, pivot_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondContextDef, branch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondContextDef, values_def_),
  };
  CondContextDef_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CondContextDef_descriptor_,
      CondContextDef::internal_default_instance(),
      CondContextDef_offsets_,
      -1,
      -1,
      -1,
      sizeof(CondContextDef),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondContextDef, _internal_metadata_));
  WhileContextDef_descriptor_ = file->message_type(2);
  static const int WhileContextDef_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, context_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, parallel_iterations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, back_prop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, swap_memory_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, pivot_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, pivot_for_pred_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, pivot_for_body_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, loop_exit_names_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, loop_enter_names_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, values_def_),
  };
  WhileContextDef_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WhileContextDef_descriptor_,
      WhileContextDef::internal_default_instance(),
      WhileContextDef_offsets_,
      -1,
      -1,
      -1,
      sizeof(WhileContextDef),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ValuesDef_descriptor_, ValuesDef::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        ValuesDef_ExternalValuesEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                ValuesDef_ExternalValuesEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CondContextDef_descriptor_, CondContextDef::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WhileContextDef_descriptor_, WhileContextDef::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto() {
  ValuesDef_default_instance_.Shutdown();
  delete ValuesDef_reflection_;
  CondContextDef_default_instance_.Shutdown();
  delete CondContextDef_reflection_;
  WhileContextDef_default_instance_.Shutdown();
  delete WhileContextDef_reflection_;
}

void protobuf_InitDefaults_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  ValuesDef_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CondContextDef_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  WhileContextDef_default_instance_.DefaultConstruct();
  ValuesDef_default_instance_.get_mutable()->InitAsDefaultInstance();
  CondContextDef_default_instance_.get_mutable()->InitAsDefaultInstance();
  WhileContextDef_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto_once_);
void protobuf_InitDefaults_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto_once_,
                 &protobuf_InitDefaults_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto_impl);
}
void protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n+tensorflow/core/protobuf/control_flow."
    "proto\022\ntensorflow\"\226\001\n\tValuesDef\022\016\n\006value"
    "s\030\001 \003(\t\022B\n\017external_values\030\002 \003(\0132).tenso"
    "rflow.ValuesDef.ExternalValuesEntry\0325\n\023E"
    "xternalValuesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value"
    "\030\002 \001(\t:\0028\001\"\210\001\n\016CondContextDef\022\024\n\014context"
    "_name\030\001 \001(\t\022\021\n\tpred_name\030\002 \001(\t\022\022\n\npivot_"
    "name\030\003 \001(\t\022\016\n\006branch\030\004 \001(\005\022)\n\nvalues_def"
    "\030\005 \001(\0132\025.tensorflow.ValuesDef\"\230\002\n\017WhileC"
    "ontextDef\022\024\n\014context_name\030\001 \001(\t\022\033\n\023paral"
    "lel_iterations\030\002 \001(\005\022\021\n\tback_prop\030\003 \001(\010\022"
    "\023\n\013swap_memory\030\004 \001(\010\022\022\n\npivot_name\030\005 \001(\t"
    "\022\033\n\023pivot_for_pred_name\030\006 \001(\t\022\033\n\023pivot_f"
    "or_body_name\030\007 \001(\t\022\027\n\017loop_exit_names\030\010 "
    "\003(\t\022\030\n\020loop_enter_names\030\n \003(\t\022)\n\nvalues_"
    "def\030\t \001(\0132\025.tensorflow.ValuesDefB2\n\030org."
    "tensorflow.frameworkB\021ControlFlowProtosP"
    "\001\370\001\001b\006proto3", 692);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/protobuf/control_flow.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto_once_);
void protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto_once_,
                 &protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto {
  StaticDescriptorInitializer_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto() {
    protobuf_AddDesc_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto();
  }
} static_descriptor_initializer_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValuesDef::kValuesFieldNumber;
const int ValuesDef::kExternalValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValuesDef::ValuesDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.ValuesDef)
}
ValuesDef::ValuesDef(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  values_(arena),
  external_values_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.ValuesDef)
}

void ValuesDef::InitAsDefaultInstance() {
}

ValuesDef::ValuesDef(const ValuesDef& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.ValuesDef)
}

void ValuesDef::SharedCtor() {
  external_values_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  external_values_.SetEntryDescriptor(
      &::tensorflow::ValuesDef_ExternalValuesEntry_descriptor_);
  _cached_size_ = 0;
}

ValuesDef::~ValuesDef() {
  // @@protoc_insertion_point(destructor:tensorflow.ValuesDef)
  SharedDtor();
}

void ValuesDef::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void ValuesDef::ArenaDtor(void* object) {
  ValuesDef* _this = reinterpret_cast< ValuesDef* >(object);
  (void)_this;
}
void ValuesDef::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ValuesDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ValuesDef::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ValuesDef_descriptor_;
}

const ValuesDef& ValuesDef::default_instance() {
  protobuf_InitDefaults_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ValuesDef> ValuesDef_default_instance_;

ValuesDef* ValuesDef::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ValuesDef>(arena);
}

void ValuesDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ValuesDef)
  values_.Clear();
  external_values_.Clear();
}

bool ValuesDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.ValuesDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string values = 1;
      case 1: {
        if (tag == 10) {
         parse_values:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_values()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->values(this->values_size() - 1).data(),
            this->values(this->values_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.ValuesDef.values"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_values;
        if (input->ExpectTag(18)) goto parse_external_values;
        break;
      }

      // map<string, string> external_values = 2;
      case 2: {
        if (tag == 18) {
         parse_external_values:
          DO_(input->IncrementRecursionDepth());
         parse_loop_external_values:
          ValuesDef_ExternalValuesEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&external_values_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.ValuesDef.ExternalValuesEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.ValuesDef.ExternalValuesEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_external_values;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.ValuesDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.ValuesDef)
  return false;
#undef DO_
}

void ValuesDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.ValuesDef)
  // repeated string values = 1;
  for (int i = 0; i < this->values_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values(i).data(), this->values(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ValuesDef.values");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->values(i), output);
  }

  // map<string, string> external_values = 2;
  if (!this->external_values().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.ValuesDef.ExternalValuesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.ValuesDef.ExternalValuesEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->external_values().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->external_values().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->external_values().begin();
          it != this->external_values().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<ValuesDef_ExternalValuesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(external_values_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ValuesDef_ExternalValuesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->external_values().begin();
          it != this->external_values().end(); ++it) {
        entry.reset(external_values_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.ValuesDef)
}

::google::protobuf::uint8* ValuesDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ValuesDef)
  // repeated string values = 1;
  for (int i = 0; i < this->values_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values(i).data(), this->values(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ValuesDef.values");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->values(i), target);
  }

  // map<string, string> external_values = 2;
  if (!this->external_values().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.ValuesDef.ExternalValuesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.ValuesDef.ExternalValuesEntry.value");
      }
    };

    if (deterministic &&
        this->external_values().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->external_values().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->external_values().begin();
          it != this->external_values().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<ValuesDef_ExternalValuesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(external_values_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ValuesDef_ExternalValuesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->external_values().begin();
          it != this->external_values().end(); ++it) {
        entry.reset(external_values_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ValuesDef)
  return target;
}

size_t ValuesDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ValuesDef)
  size_t total_size = 0;

  // repeated string values = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->values_size());
  for (int i = 0; i < this->values_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->values(i));
  }

  // map<string, string> external_values = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->external_values_size());
  {
    ::google::protobuf::scoped_ptr<ValuesDef_ExternalValuesEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->external_values().begin();
        it != this->external_values().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(external_values_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ValuesDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ValuesDef)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ValuesDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValuesDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ValuesDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ValuesDef)
    UnsafeMergeFrom(*source);
  }
}

void ValuesDef::MergeFrom(const ValuesDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ValuesDef)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ValuesDef::UnsafeMergeFrom(const ValuesDef& from) {
  GOOGLE_DCHECK(&from != this);
  values_.UnsafeMergeFrom(from.values_);
  external_values_.MergeFrom(from.external_values_);
}

void ValuesDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ValuesDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValuesDef::CopyFrom(const ValuesDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ValuesDef)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ValuesDef::IsInitialized() const {

  return true;
}

void ValuesDef::Swap(ValuesDef* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ValuesDef temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void ValuesDef::UnsafeArenaSwap(ValuesDef* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ValuesDef::InternalSwap(ValuesDef* other) {
  values_.UnsafeArenaSwap(&other->values_);
  external_values_.Swap(&other->external_values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ValuesDef::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ValuesDef_descriptor_;
  metadata.reflection = ValuesDef_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ValuesDef

// repeated string values = 1;
int ValuesDef::values_size() const {
  return values_.size();
}
void ValuesDef::clear_values() {
  values_.Clear();
}
const ::std::string& ValuesDef::values(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.ValuesDef.values)
  return values_.Get(index);
}
::std::string* ValuesDef::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.ValuesDef.values)
  return values_.Mutable(index);
}
void ValuesDef::set_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.ValuesDef.values)
  values_.Mutable(index)->assign(value);
}
void ValuesDef::set_values(int index, const char* value) {
  values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.ValuesDef.values)
}
void ValuesDef::set_values(int index, const char* value, size_t size) {
  values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.ValuesDef.values)
}
::std::string* ValuesDef::add_values() {
  // @@protoc_insertion_point(field_add_mutable:tensorflow.ValuesDef.values)
  return values_.Add();
}
void ValuesDef::add_values(const ::std::string& value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.ValuesDef.values)
}
void ValuesDef::add_values(const char* value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.ValuesDef.values)
}
void ValuesDef::add_values(const char* value, size_t size) {
  values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.ValuesDef.values)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ValuesDef::values() const {
  // @@protoc_insertion_point(field_list:tensorflow.ValuesDef.values)
  return values_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ValuesDef::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.ValuesDef.values)
  return &values_;
}

// map<string, string> external_values = 2;
int ValuesDef::external_values_size() const {
  return external_values_.size();
}
void ValuesDef::clear_external_values() {
  external_values_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
ValuesDef::external_values() const {
  // @@protoc_insertion_point(field_map:tensorflow.ValuesDef.external_values)
  return external_values_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
ValuesDef::mutable_external_values() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.ValuesDef.external_values)
  return external_values_.MutableMap();
}

inline const ValuesDef* ValuesDef::internal_default_instance() {
  return &ValuesDef_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void CondContextDef::_slow_mutable_values_def() {
  values_def_ = ::google::protobuf::Arena::CreateMessage< ::tensorflow::ValuesDef >(
      GetArenaNoVirtual());
}
::tensorflow::ValuesDef* CondContextDef::_slow_release_values_def() {
  if (values_def_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::ValuesDef* temp = new ::tensorflow::ValuesDef(*values_def_);
    values_def_ = NULL;
    return temp;
  }
}
::tensorflow::ValuesDef* CondContextDef::unsafe_arena_release_values_def() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.CondContextDef.values_def)
  
  ::tensorflow::ValuesDef* temp = values_def_;
  values_def_ = NULL;
  return temp;
}
void CondContextDef::_slow_set_allocated_values_def(
    ::google::protobuf::Arena* message_arena, ::tensorflow::ValuesDef** values_def) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*values_def) == NULL) {
      message_arena->Own(*values_def);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*values_def)) {
      ::tensorflow::ValuesDef* new_values_def = 
            ::google::protobuf::Arena::CreateMessage< ::tensorflow::ValuesDef >(
            message_arena);
      new_values_def->CopyFrom(**values_def);
      *values_def = new_values_def;
    }
}
void CondContextDef::unsafe_arena_set_allocated_values_def(
    ::tensorflow::ValuesDef* values_def) {
  if (GetArenaNoVirtual() == NULL) {
    delete values_def_;
  }
  values_def_ = values_def;
  if (values_def) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CondContextDef.values_def)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CondContextDef::kContextNameFieldNumber;
const int CondContextDef::kPredNameFieldNumber;
const int CondContextDef::kPivotNameFieldNumber;
const int CondContextDef::kBranchFieldNumber;
const int CondContextDef::kValuesDefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CondContextDef::CondContextDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CondContextDef)
}
CondContextDef::CondContextDef(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CondContextDef)
}

void CondContextDef::InitAsDefaultInstance() {
  values_def_ = const_cast< ::tensorflow::ValuesDef*>(
      ::tensorflow::ValuesDef::internal_default_instance());
}

CondContextDef::CondContextDef(const CondContextDef& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.CondContextDef)
}

void CondContextDef::SharedCtor() {
  context_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pred_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pivot_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  values_def_ = NULL;
  branch_ = 0;
  _cached_size_ = 0;
}

CondContextDef::~CondContextDef() {
  // @@protoc_insertion_point(destructor:tensorflow.CondContextDef)
  SharedDtor();
}

void CondContextDef::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  context_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  pred_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  pivot_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != &CondContextDef_default_instance_.get()) {
    delete values_def_;
  }
}

void CondContextDef::ArenaDtor(void* object) {
  CondContextDef* _this = reinterpret_cast< CondContextDef* >(object);
  (void)_this;
}
void CondContextDef::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CondContextDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CondContextDef::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CondContextDef_descriptor_;
}

const CondContextDef& CondContextDef::default_instance() {
  protobuf_InitDefaults_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CondContextDef> CondContextDef_default_instance_;

CondContextDef* CondContextDef::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<CondContextDef>(arena);
}

void CondContextDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CondContextDef)
  context_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  pred_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  pivot_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  branch_ = 0;
  if (GetArenaNoVirtual() == NULL && values_def_ != NULL) delete values_def_;
  values_def_ = NULL;
}

bool CondContextDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CondContextDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string context_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_context_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->context_name().data(), this->context_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CondContextDef.context_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pred_name;
        break;
      }

      // optional string pred_name = 2;
      case 2: {
        if (tag == 18) {
         parse_pred_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pred_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pred_name().data(), this->pred_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CondContextDef.pred_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pivot_name;
        break;
      }

      // optional string pivot_name = 3;
      case 3: {
        if (tag == 26) {
         parse_pivot_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pivot_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pivot_name().data(), this->pivot_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CondContextDef.pivot_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_branch;
        break;
      }

      // optional int32 branch = 4;
      case 4: {
        if (tag == 32) {
         parse_branch:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &branch_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_values_def;
        break;
      }

      // optional .tensorflow.ValuesDef values_def = 5;
      case 5: {
        if (tag == 42) {
         parse_values_def:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_values_def()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CondContextDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CondContextDef)
  return false;
#undef DO_
}

void CondContextDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CondContextDef)
  // optional string context_name = 1;
  if (this->context_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->context_name().data(), this->context_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CondContextDef.context_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->context_name(), output);
  }

  // optional string pred_name = 2;
  if (this->pred_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pred_name().data(), this->pred_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CondContextDef.pred_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pred_name(), output);
  }

  // optional string pivot_name = 3;
  if (this->pivot_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pivot_name().data(), this->pivot_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CondContextDef.pivot_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pivot_name(), output);
  }

  // optional int32 branch = 4;
  if (this->branch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->branch(), output);
  }

  // optional .tensorflow.ValuesDef values_def = 5;
  if (this->has_values_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->values_def_, output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.CondContextDef)
}

::google::protobuf::uint8* CondContextDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CondContextDef)
  // optional string context_name = 1;
  if (this->context_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->context_name().data(), this->context_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CondContextDef.context_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->context_name(), target);
  }

  // optional string pred_name = 2;
  if (this->pred_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pred_name().data(), this->pred_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CondContextDef.pred_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pred_name(), target);
  }

  // optional string pivot_name = 3;
  if (this->pivot_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pivot_name().data(), this->pivot_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CondContextDef.pivot_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pivot_name(), target);
  }

  // optional int32 branch = 4;
  if (this->branch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->branch(), target);
  }

  // optional .tensorflow.ValuesDef values_def = 5;
  if (this->has_values_def()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->values_def_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CondContextDef)
  return target;
}

size_t CondContextDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CondContextDef)
  size_t total_size = 0;

  // optional string context_name = 1;
  if (this->context_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->context_name());
  }

  // optional string pred_name = 2;
  if (this->pred_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pred_name());
  }

  // optional string pivot_name = 3;
  if (this->pivot_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pivot_name());
  }

  // optional int32 branch = 4;
  if (this->branch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->branch());
  }

  // optional .tensorflow.ValuesDef values_def = 5;
  if (this->has_values_def()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->values_def_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CondContextDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CondContextDef)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CondContextDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CondContextDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CondContextDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CondContextDef)
    UnsafeMergeFrom(*source);
  }
}

void CondContextDef::MergeFrom(const CondContextDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CondContextDef)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CondContextDef::UnsafeMergeFrom(const CondContextDef& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.context_name().size() > 0) {
    set_context_name(from.context_name());
  }
  if (from.pred_name().size() > 0) {
    set_pred_name(from.pred_name());
  }
  if (from.pivot_name().size() > 0) {
    set_pivot_name(from.pivot_name());
  }
  if (from.branch() != 0) {
    set_branch(from.branch());
  }
  if (from.has_values_def()) {
    mutable_values_def()->::tensorflow::ValuesDef::MergeFrom(from.values_def());
  }
}

void CondContextDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CondContextDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CondContextDef::CopyFrom(const CondContextDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CondContextDef)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CondContextDef::IsInitialized() const {

  return true;
}

void CondContextDef::Swap(CondContextDef* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CondContextDef temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void CondContextDef::UnsafeArenaSwap(CondContextDef* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CondContextDef::InternalSwap(CondContextDef* other) {
  context_name_.Swap(&other->context_name_);
  pred_name_.Swap(&other->pred_name_);
  pivot_name_.Swap(&other->pivot_name_);
  std::swap(branch_, other->branch_);
  std::swap(values_def_, other->values_def_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CondContextDef::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CondContextDef_descriptor_;
  metadata.reflection = CondContextDef_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CondContextDef

// optional string context_name = 1;
void CondContextDef::clear_context_name() {
  context_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CondContextDef::context_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.CondContextDef.context_name)
  return context_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CondContextDef::set_context_name(const ::std::string& value) {
  
  context_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.CondContextDef.context_name)
}
void CondContextDef::set_context_name(const char* value) {
  
  context_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.CondContextDef.context_name)
}
void CondContextDef::set_context_name(const char* value,
    size_t size) {
  
  context_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.CondContextDef.context_name)
}
::std::string* CondContextDef::mutable_context_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.CondContextDef.context_name)
  return context_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CondContextDef::release_context_name() {
  // @@protoc_insertion_point(field_release:tensorflow.CondContextDef.context_name)
  
  return context_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CondContextDef::unsafe_arena_release_context_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.CondContextDef.context_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return context_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CondContextDef::set_allocated_context_name(::std::string* context_name) {
  if (context_name != NULL) {
    
  } else {
    
  }
  context_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CondContextDef.context_name)
}
void CondContextDef::unsafe_arena_set_allocated_context_name(
    ::std::string* context_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (context_name != NULL) {
    
  } else {
    
  }
  context_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      context_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CondContextDef.context_name)
}

// optional string pred_name = 2;
void CondContextDef::clear_pred_name() {
  pred_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CondContextDef::pred_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.CondContextDef.pred_name)
  return pred_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CondContextDef::set_pred_name(const ::std::string& value) {
  
  pred_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.CondContextDef.pred_name)
}
void CondContextDef::set_pred_name(const char* value) {
  
  pred_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.CondContextDef.pred_name)
}
void CondContextDef::set_pred_name(const char* value,
    size_t size) {
  
  pred_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.CondContextDef.pred_name)
}
::std::string* CondContextDef::mutable_pred_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.CondContextDef.pred_name)
  return pred_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CondContextDef::release_pred_name() {
  // @@protoc_insertion_point(field_release:tensorflow.CondContextDef.pred_name)
  
  return pred_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CondContextDef::unsafe_arena_release_pred_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.CondContextDef.pred_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return pred_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CondContextDef::set_allocated_pred_name(::std::string* pred_name) {
  if (pred_name != NULL) {
    
  } else {
    
  }
  pred_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pred_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CondContextDef.pred_name)
}
void CondContextDef::unsafe_arena_set_allocated_pred_name(
    ::std::string* pred_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (pred_name != NULL) {
    
  } else {
    
  }
  pred_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      pred_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CondContextDef.pred_name)
}

// optional string pivot_name = 3;
void CondContextDef::clear_pivot_name() {
  pivot_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CondContextDef::pivot_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.CondContextDef.pivot_name)
  return pivot_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CondContextDef::set_pivot_name(const ::std::string& value) {
  
  pivot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.CondContextDef.pivot_name)
}
void CondContextDef::set_pivot_name(const char* value) {
  
  pivot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.CondContextDef.pivot_name)
}
void CondContextDef::set_pivot_name(const char* value,
    size_t size) {
  
  pivot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.CondContextDef.pivot_name)
}
::std::string* CondContextDef::mutable_pivot_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.CondContextDef.pivot_name)
  return pivot_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CondContextDef::release_pivot_name() {
  // @@protoc_insertion_point(field_release:tensorflow.CondContextDef.pivot_name)
  
  return pivot_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CondContextDef::unsafe_arena_release_pivot_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.CondContextDef.pivot_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return pivot_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CondContextDef::set_allocated_pivot_name(::std::string* pivot_name) {
  if (pivot_name != NULL) {
    
  } else {
    
  }
  pivot_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pivot_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CondContextDef.pivot_name)
}
void CondContextDef::unsafe_arena_set_allocated_pivot_name(
    ::std::string* pivot_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (pivot_name != NULL) {
    
  } else {
    
  }
  pivot_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      pivot_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CondContextDef.pivot_name)
}

// optional int32 branch = 4;
void CondContextDef::clear_branch() {
  branch_ = 0;
}
::google::protobuf::int32 CondContextDef::branch() const {
  // @@protoc_insertion_point(field_get:tensorflow.CondContextDef.branch)
  return branch_;
}
void CondContextDef::set_branch(::google::protobuf::int32 value) {
  
  branch_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.CondContextDef.branch)
}

// optional .tensorflow.ValuesDef values_def = 5;
bool CondContextDef::has_values_def() const {
  return this != internal_default_instance() && values_def_ != NULL;
}
void CondContextDef::clear_values_def() {
  if (GetArenaNoVirtual() == NULL && values_def_ != NULL) delete values_def_;
  values_def_ = NULL;
}
const ::tensorflow::ValuesDef& CondContextDef::values_def() const {
  // @@protoc_insertion_point(field_get:tensorflow.CondContextDef.values_def)
  return values_def_ != NULL ? *values_def_
                         : *::tensorflow::ValuesDef::internal_default_instance();
}
::tensorflow::ValuesDef* CondContextDef::mutable_values_def() {
  
  if (values_def_ == NULL) {
    _slow_mutable_values_def();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.CondContextDef.values_def)
  return values_def_;
}
::tensorflow::ValuesDef* CondContextDef::release_values_def() {
  // @@protoc_insertion_point(field_release:tensorflow.CondContextDef.values_def)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_values_def();
  } else {
    ::tensorflow::ValuesDef* temp = values_def_;
    values_def_ = NULL;
    return temp;
  }
}
 void CondContextDef::set_allocated_values_def(::tensorflow::ValuesDef* values_def) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete values_def_;
  }
  if (values_def != NULL) {
    _slow_set_allocated_values_def(message_arena, &values_def);
  }
  values_def_ = values_def;
  if (values_def) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CondContextDef.values_def)
}

inline const CondContextDef* CondContextDef::internal_default_instance() {
  return &CondContextDef_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void WhileContextDef::_slow_mutable_values_def() {
  values_def_ = ::google::protobuf::Arena::CreateMessage< ::tensorflow::ValuesDef >(
      GetArenaNoVirtual());
}
::tensorflow::ValuesDef* WhileContextDef::_slow_release_values_def() {
  if (values_def_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::ValuesDef* temp = new ::tensorflow::ValuesDef(*values_def_);
    values_def_ = NULL;
    return temp;
  }
}
::tensorflow::ValuesDef* WhileContextDef::unsafe_arena_release_values_def() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.WhileContextDef.values_def)
  
  ::tensorflow::ValuesDef* temp = values_def_;
  values_def_ = NULL;
  return temp;
}
void WhileContextDef::_slow_set_allocated_values_def(
    ::google::protobuf::Arena* message_arena, ::tensorflow::ValuesDef** values_def) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*values_def) == NULL) {
      message_arena->Own(*values_def);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*values_def)) {
      ::tensorflow::ValuesDef* new_values_def = 
            ::google::protobuf::Arena::CreateMessage< ::tensorflow::ValuesDef >(
            message_arena);
      new_values_def->CopyFrom(**values_def);
      *values_def = new_values_def;
    }
}
void WhileContextDef::unsafe_arena_set_allocated_values_def(
    ::tensorflow::ValuesDef* values_def) {
  if (GetArenaNoVirtual() == NULL) {
    delete values_def_;
  }
  values_def_ = values_def;
  if (values_def) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.WhileContextDef.values_def)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WhileContextDef::kContextNameFieldNumber;
const int WhileContextDef::kParallelIterationsFieldNumber;
const int WhileContextDef::kBackPropFieldNumber;
const int WhileContextDef::kSwapMemoryFieldNumber;
const int WhileContextDef::kPivotNameFieldNumber;
const int WhileContextDef::kPivotForPredNameFieldNumber;
const int WhileContextDef::kPivotForBodyNameFieldNumber;
const int WhileContextDef::kLoopExitNamesFieldNumber;
const int WhileContextDef::kLoopEnterNamesFieldNumber;
const int WhileContextDef::kValuesDefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WhileContextDef::WhileContextDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.WhileContextDef)
}
WhileContextDef::WhileContextDef(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  loop_exit_names_(arena),
  loop_enter_names_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.WhileContextDef)
}

void WhileContextDef::InitAsDefaultInstance() {
  values_def_ = const_cast< ::tensorflow::ValuesDef*>(
      ::tensorflow::ValuesDef::internal_default_instance());
}

WhileContextDef::WhileContextDef(const WhileContextDef& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tensorflow.WhileContextDef)
}

void WhileContextDef::SharedCtor() {
  context_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pivot_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pivot_for_pred_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pivot_for_body_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  values_def_ = NULL;
  ::memset(&parallel_iterations_, 0, reinterpret_cast<char*>(&swap_memory_) -
    reinterpret_cast<char*>(&parallel_iterations_) + sizeof(swap_memory_));
  _cached_size_ = 0;
}

WhileContextDef::~WhileContextDef() {
  // @@protoc_insertion_point(destructor:tensorflow.WhileContextDef)
  SharedDtor();
}

void WhileContextDef::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  context_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  pivot_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  pivot_for_pred_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  pivot_for_body_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != &WhileContextDef_default_instance_.get()) {
    delete values_def_;
  }
}

void WhileContextDef::ArenaDtor(void* object) {
  WhileContextDef* _this = reinterpret_cast< WhileContextDef* >(object);
  (void)_this;
}
void WhileContextDef::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void WhileContextDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WhileContextDef::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WhileContextDef_descriptor_;
}

const WhileContextDef& WhileContextDef::default_instance() {
  protobuf_InitDefaults_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<WhileContextDef> WhileContextDef_default_instance_;

WhileContextDef* WhileContextDef::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<WhileContextDef>(arena);
}

void WhileContextDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.WhileContextDef)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(WhileContextDef, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<WhileContextDef*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(parallel_iterations_, swap_memory_);
  context_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  pivot_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  pivot_for_pred_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  pivot_for_body_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && values_def_ != NULL) delete values_def_;
  values_def_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  loop_exit_names_.Clear();
  loop_enter_names_.Clear();
}

bool WhileContextDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.WhileContextDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string context_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_context_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->context_name().data(), this->context_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.WhileContextDef.context_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_parallel_iterations;
        break;
      }

      // optional int32 parallel_iterations = 2;
      case 2: {
        if (tag == 16) {
         parse_parallel_iterations:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parallel_iterations_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_back_prop;
        break;
      }

      // optional bool back_prop = 3;
      case 3: {
        if (tag == 24) {
         parse_back_prop:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &back_prop_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_swap_memory;
        break;
      }

      // optional bool swap_memory = 4;
      case 4: {
        if (tag == 32) {
         parse_swap_memory:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &swap_memory_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_pivot_name;
        break;
      }

      // optional string pivot_name = 5;
      case 5: {
        if (tag == 42) {
         parse_pivot_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pivot_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pivot_name().data(), this->pivot_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.WhileContextDef.pivot_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_pivot_for_pred_name;
        break;
      }

      // optional string pivot_for_pred_name = 6;
      case 6: {
        if (tag == 50) {
         parse_pivot_for_pred_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pivot_for_pred_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pivot_for_pred_name().data(), this->pivot_for_pred_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.WhileContextDef.pivot_for_pred_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_pivot_for_body_name;
        break;
      }

      // optional string pivot_for_body_name = 7;
      case 7: {
        if (tag == 58) {
         parse_pivot_for_body_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pivot_for_body_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pivot_for_body_name().data(), this->pivot_for_body_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.WhileContextDef.pivot_for_body_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_loop_exit_names;
        break;
      }

      // repeated string loop_exit_names = 8;
      case 8: {
        if (tag == 66) {
         parse_loop_exit_names:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_loop_exit_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->loop_exit_names(this->loop_exit_names_size() - 1).data(),
            this->loop_exit_names(this->loop_exit_names_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.WhileContextDef.loop_exit_names"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_loop_exit_names;
        if (input->ExpectTag(74)) goto parse_values_def;
        break;
      }

      // optional .tensorflow.ValuesDef values_def = 9;
      case 9: {
        if (tag == 74) {
         parse_values_def:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_values_def()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_loop_enter_names;
        break;
      }

      // repeated string loop_enter_names = 10;
      case 10: {
        if (tag == 82) {
         parse_loop_enter_names:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_loop_enter_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->loop_enter_names(this->loop_enter_names_size() - 1).data(),
            this->loop_enter_names(this->loop_enter_names_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.WhileContextDef.loop_enter_names"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_loop_enter_names;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.WhileContextDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.WhileContextDef)
  return false;
#undef DO_
}

void WhileContextDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.WhileContextDef)
  // optional string context_name = 1;
  if (this->context_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->context_name().data(), this->context_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.context_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->context_name(), output);
  }

  // optional int32 parallel_iterations = 2;
  if (this->parallel_iterations() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->parallel_iterations(), output);
  }

  // optional bool back_prop = 3;
  if (this->back_prop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->back_prop(), output);
  }

  // optional bool swap_memory = 4;
  if (this->swap_memory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->swap_memory(), output);
  }

  // optional string pivot_name = 5;
  if (this->pivot_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pivot_name().data(), this->pivot_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.pivot_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->pivot_name(), output);
  }

  // optional string pivot_for_pred_name = 6;
  if (this->pivot_for_pred_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pivot_for_pred_name().data(), this->pivot_for_pred_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.pivot_for_pred_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->pivot_for_pred_name(), output);
  }

  // optional string pivot_for_body_name = 7;
  if (this->pivot_for_body_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pivot_for_body_name().data(), this->pivot_for_body_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.pivot_for_body_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->pivot_for_body_name(), output);
  }

  // repeated string loop_exit_names = 8;
  for (int i = 0; i < this->loop_exit_names_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->loop_exit_names(i).data(), this->loop_exit_names(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.loop_exit_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->loop_exit_names(i), output);
  }

  // optional .tensorflow.ValuesDef values_def = 9;
  if (this->has_values_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->values_def_, output);
  }

  // repeated string loop_enter_names = 10;
  for (int i = 0; i < this->loop_enter_names_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->loop_enter_names(i).data(), this->loop_enter_names(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.loop_enter_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->loop_enter_names(i), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.WhileContextDef)
}

::google::protobuf::uint8* WhileContextDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.WhileContextDef)
  // optional string context_name = 1;
  if (this->context_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->context_name().data(), this->context_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.context_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->context_name(), target);
  }

  // optional int32 parallel_iterations = 2;
  if (this->parallel_iterations() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->parallel_iterations(), target);
  }

  // optional bool back_prop = 3;
  if (this->back_prop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->back_prop(), target);
  }

  // optional bool swap_memory = 4;
  if (this->swap_memory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->swap_memory(), target);
  }

  // optional string pivot_name = 5;
  if (this->pivot_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pivot_name().data(), this->pivot_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.pivot_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->pivot_name(), target);
  }

  // optional string pivot_for_pred_name = 6;
  if (this->pivot_for_pred_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pivot_for_pred_name().data(), this->pivot_for_pred_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.pivot_for_pred_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->pivot_for_pred_name(), target);
  }

  // optional string pivot_for_body_name = 7;
  if (this->pivot_for_body_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pivot_for_body_name().data(), this->pivot_for_body_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.pivot_for_body_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->pivot_for_body_name(), target);
  }

  // repeated string loop_exit_names = 8;
  for (int i = 0; i < this->loop_exit_names_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->loop_exit_names(i).data(), this->loop_exit_names(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.loop_exit_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->loop_exit_names(i), target);
  }

  // optional .tensorflow.ValuesDef values_def = 9;
  if (this->has_values_def()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->values_def_, false, target);
  }

  // repeated string loop_enter_names = 10;
  for (int i = 0; i < this->loop_enter_names_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->loop_enter_names(i).data(), this->loop_enter_names(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.loop_enter_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->loop_enter_names(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.WhileContextDef)
  return target;
}

size_t WhileContextDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.WhileContextDef)
  size_t total_size = 0;

  // optional string context_name = 1;
  if (this->context_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->context_name());
  }

  // optional int32 parallel_iterations = 2;
  if (this->parallel_iterations() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->parallel_iterations());
  }

  // optional bool back_prop = 3;
  if (this->back_prop() != 0) {
    total_size += 1 + 1;
  }

  // optional bool swap_memory = 4;
  if (this->swap_memory() != 0) {
    total_size += 1 + 1;
  }

  // optional string pivot_name = 5;
  if (this->pivot_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pivot_name());
  }

  // optional string pivot_for_pred_name = 6;
  if (this->pivot_for_pred_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pivot_for_pred_name());
  }

  // optional string pivot_for_body_name = 7;
  if (this->pivot_for_body_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pivot_for_body_name());
  }

  // optional .tensorflow.ValuesDef values_def = 9;
  if (this->has_values_def()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->values_def_);
  }

  // repeated string loop_exit_names = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->loop_exit_names_size());
  for (int i = 0; i < this->loop_exit_names_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->loop_exit_names(i));
  }

  // repeated string loop_enter_names = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->loop_enter_names_size());
  for (int i = 0; i < this->loop_enter_names_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->loop_enter_names(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WhileContextDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.WhileContextDef)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WhileContextDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WhileContextDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.WhileContextDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.WhileContextDef)
    UnsafeMergeFrom(*source);
  }
}

void WhileContextDef::MergeFrom(const WhileContextDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.WhileContextDef)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void WhileContextDef::UnsafeMergeFrom(const WhileContextDef& from) {
  GOOGLE_DCHECK(&from != this);
  loop_exit_names_.UnsafeMergeFrom(from.loop_exit_names_);
  loop_enter_names_.UnsafeMergeFrom(from.loop_enter_names_);
  if (from.context_name().size() > 0) {
    set_context_name(from.context_name());
  }
  if (from.parallel_iterations() != 0) {
    set_parallel_iterations(from.parallel_iterations());
  }
  if (from.back_prop() != 0) {
    set_back_prop(from.back_prop());
  }
  if (from.swap_memory() != 0) {
    set_swap_memory(from.swap_memory());
  }
  if (from.pivot_name().size() > 0) {
    set_pivot_name(from.pivot_name());
  }
  if (from.pivot_for_pred_name().size() > 0) {
    set_pivot_for_pred_name(from.pivot_for_pred_name());
  }
  if (from.pivot_for_body_name().size() > 0) {
    set_pivot_for_body_name(from.pivot_for_body_name());
  }
  if (from.has_values_def()) {
    mutable_values_def()->::tensorflow::ValuesDef::MergeFrom(from.values_def());
  }
}

void WhileContextDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.WhileContextDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WhileContextDef::CopyFrom(const WhileContextDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.WhileContextDef)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool WhileContextDef::IsInitialized() const {

  return true;
}

void WhileContextDef::Swap(WhileContextDef* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    WhileContextDef temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void WhileContextDef::UnsafeArenaSwap(WhileContextDef* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void WhileContextDef::InternalSwap(WhileContextDef* other) {
  context_name_.Swap(&other->context_name_);
  std::swap(parallel_iterations_, other->parallel_iterations_);
  std::swap(back_prop_, other->back_prop_);
  std::swap(swap_memory_, other->swap_memory_);
  pivot_name_.Swap(&other->pivot_name_);
  pivot_for_pred_name_.Swap(&other->pivot_for_pred_name_);
  pivot_for_body_name_.Swap(&other->pivot_for_body_name_);
  loop_exit_names_.UnsafeArenaSwap(&other->loop_exit_names_);
  loop_enter_names_.UnsafeArenaSwap(&other->loop_enter_names_);
  std::swap(values_def_, other->values_def_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WhileContextDef::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WhileContextDef_descriptor_;
  metadata.reflection = WhileContextDef_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WhileContextDef

// optional string context_name = 1;
void WhileContextDef::clear_context_name() {
  context_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& WhileContextDef::context_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.context_name)
  return context_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WhileContextDef::set_context_name(const ::std::string& value) {
  
  context_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.context_name)
}
void WhileContextDef::set_context_name(const char* value) {
  
  context_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.WhileContextDef.context_name)
}
void WhileContextDef::set_context_name(const char* value,
    size_t size) {
  
  context_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.WhileContextDef.context_name)
}
::std::string* WhileContextDef::mutable_context_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.context_name)
  return context_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::release_context_name() {
  // @@protoc_insertion_point(field_release:tensorflow.WhileContextDef.context_name)
  
  return context_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::unsafe_arena_release_context_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.WhileContextDef.context_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return context_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void WhileContextDef::set_allocated_context_name(::std::string* context_name) {
  if (context_name != NULL) {
    
  } else {
    
  }
  context_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.WhileContextDef.context_name)
}
void WhileContextDef::unsafe_arena_set_allocated_context_name(
    ::std::string* context_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (context_name != NULL) {
    
  } else {
    
  }
  context_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      context_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.WhileContextDef.context_name)
}

// optional int32 parallel_iterations = 2;
void WhileContextDef::clear_parallel_iterations() {
  parallel_iterations_ = 0;
}
::google::protobuf::int32 WhileContextDef::parallel_iterations() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.parallel_iterations)
  return parallel_iterations_;
}
void WhileContextDef::set_parallel_iterations(::google::protobuf::int32 value) {
  
  parallel_iterations_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.parallel_iterations)
}

// optional bool back_prop = 3;
void WhileContextDef::clear_back_prop() {
  back_prop_ = false;
}
bool WhileContextDef::back_prop() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.back_prop)
  return back_prop_;
}
void WhileContextDef::set_back_prop(bool value) {
  
  back_prop_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.back_prop)
}

// optional bool swap_memory = 4;
void WhileContextDef::clear_swap_memory() {
  swap_memory_ = false;
}
bool WhileContextDef::swap_memory() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.swap_memory)
  return swap_memory_;
}
void WhileContextDef::set_swap_memory(bool value) {
  
  swap_memory_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.swap_memory)
}

// optional string pivot_name = 5;
void WhileContextDef::clear_pivot_name() {
  pivot_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& WhileContextDef::pivot_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.pivot_name)
  return pivot_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WhileContextDef::set_pivot_name(const ::std::string& value) {
  
  pivot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.pivot_name)
}
void WhileContextDef::set_pivot_name(const char* value) {
  
  pivot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.WhileContextDef.pivot_name)
}
void WhileContextDef::set_pivot_name(const char* value,
    size_t size) {
  
  pivot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.WhileContextDef.pivot_name)
}
::std::string* WhileContextDef::mutable_pivot_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.pivot_name)
  return pivot_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::release_pivot_name() {
  // @@protoc_insertion_point(field_release:tensorflow.WhileContextDef.pivot_name)
  
  return pivot_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::unsafe_arena_release_pivot_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.WhileContextDef.pivot_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return pivot_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void WhileContextDef::set_allocated_pivot_name(::std::string* pivot_name) {
  if (pivot_name != NULL) {
    
  } else {
    
  }
  pivot_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pivot_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.WhileContextDef.pivot_name)
}
void WhileContextDef::unsafe_arena_set_allocated_pivot_name(
    ::std::string* pivot_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (pivot_name != NULL) {
    
  } else {
    
  }
  pivot_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      pivot_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.WhileContextDef.pivot_name)
}

// optional string pivot_for_pred_name = 6;
void WhileContextDef::clear_pivot_for_pred_name() {
  pivot_for_pred_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& WhileContextDef::pivot_for_pred_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.pivot_for_pred_name)
  return pivot_for_pred_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WhileContextDef::set_pivot_for_pred_name(const ::std::string& value) {
  
  pivot_for_pred_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.pivot_for_pred_name)
}
void WhileContextDef::set_pivot_for_pred_name(const char* value) {
  
  pivot_for_pred_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.WhileContextDef.pivot_for_pred_name)
}
void WhileContextDef::set_pivot_for_pred_name(const char* value,
    size_t size) {
  
  pivot_for_pred_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.WhileContextDef.pivot_for_pred_name)
}
::std::string* WhileContextDef::mutable_pivot_for_pred_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.pivot_for_pred_name)
  return pivot_for_pred_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::release_pivot_for_pred_name() {
  // @@protoc_insertion_point(field_release:tensorflow.WhileContextDef.pivot_for_pred_name)
  
  return pivot_for_pred_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::unsafe_arena_release_pivot_for_pred_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.WhileContextDef.pivot_for_pred_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return pivot_for_pred_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void WhileContextDef::set_allocated_pivot_for_pred_name(::std::string* pivot_for_pred_name) {
  if (pivot_for_pred_name != NULL) {
    
  } else {
    
  }
  pivot_for_pred_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pivot_for_pred_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.WhileContextDef.pivot_for_pred_name)
}
void WhileContextDef::unsafe_arena_set_allocated_pivot_for_pred_name(
    ::std::string* pivot_for_pred_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (pivot_for_pred_name != NULL) {
    
  } else {
    
  }
  pivot_for_pred_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      pivot_for_pred_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.WhileContextDef.pivot_for_pred_name)
}

// optional string pivot_for_body_name = 7;
void WhileContextDef::clear_pivot_for_body_name() {
  pivot_for_body_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& WhileContextDef::pivot_for_body_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.pivot_for_body_name)
  return pivot_for_body_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WhileContextDef::set_pivot_for_body_name(const ::std::string& value) {
  
  pivot_for_body_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.pivot_for_body_name)
}
void WhileContextDef::set_pivot_for_body_name(const char* value) {
  
  pivot_for_body_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.WhileContextDef.pivot_for_body_name)
}
void WhileContextDef::set_pivot_for_body_name(const char* value,
    size_t size) {
  
  pivot_for_body_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.WhileContextDef.pivot_for_body_name)
}
::std::string* WhileContextDef::mutable_pivot_for_body_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.pivot_for_body_name)
  return pivot_for_body_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::release_pivot_for_body_name() {
  // @@protoc_insertion_point(field_release:tensorflow.WhileContextDef.pivot_for_body_name)
  
  return pivot_for_body_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::unsafe_arena_release_pivot_for_body_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.WhileContextDef.pivot_for_body_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return pivot_for_body_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void WhileContextDef::set_allocated_pivot_for_body_name(::std::string* pivot_for_body_name) {
  if (pivot_for_body_name != NULL) {
    
  } else {
    
  }
  pivot_for_body_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pivot_for_body_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.WhileContextDef.pivot_for_body_name)
}
void WhileContextDef::unsafe_arena_set_allocated_pivot_for_body_name(
    ::std::string* pivot_for_body_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (pivot_for_body_name != NULL) {
    
  } else {
    
  }
  pivot_for_body_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      pivot_for_body_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.WhileContextDef.pivot_for_body_name)
}

// repeated string loop_exit_names = 8;
int WhileContextDef::loop_exit_names_size() const {
  return loop_exit_names_.size();
}
void WhileContextDef::clear_loop_exit_names() {
  loop_exit_names_.Clear();
}
const ::std::string& WhileContextDef::loop_exit_names(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.loop_exit_names)
  return loop_exit_names_.Get(index);
}
::std::string* WhileContextDef::mutable_loop_exit_names(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.loop_exit_names)
  return loop_exit_names_.Mutable(index);
}
void WhileContextDef::set_loop_exit_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.loop_exit_names)
  loop_exit_names_.Mutable(index)->assign(value);
}
void WhileContextDef::set_loop_exit_names(int index, const char* value) {
  loop_exit_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.WhileContextDef.loop_exit_names)
}
void WhileContextDef::set_loop_exit_names(int index, const char* value, size_t size) {
  loop_exit_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.WhileContextDef.loop_exit_names)
}
::std::string* WhileContextDef::add_loop_exit_names() {
  // @@protoc_insertion_point(field_add_mutable:tensorflow.WhileContextDef.loop_exit_names)
  return loop_exit_names_.Add();
}
void WhileContextDef::add_loop_exit_names(const ::std::string& value) {
  loop_exit_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.WhileContextDef.loop_exit_names)
}
void WhileContextDef::add_loop_exit_names(const char* value) {
  loop_exit_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.WhileContextDef.loop_exit_names)
}
void WhileContextDef::add_loop_exit_names(const char* value, size_t size) {
  loop_exit_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.WhileContextDef.loop_exit_names)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
WhileContextDef::loop_exit_names() const {
  // @@protoc_insertion_point(field_list:tensorflow.WhileContextDef.loop_exit_names)
  return loop_exit_names_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
WhileContextDef::mutable_loop_exit_names() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.WhileContextDef.loop_exit_names)
  return &loop_exit_names_;
}

// repeated string loop_enter_names = 10;
int WhileContextDef::loop_enter_names_size() const {
  return loop_enter_names_.size();
}
void WhileContextDef::clear_loop_enter_names() {
  loop_enter_names_.Clear();
}
const ::std::string& WhileContextDef::loop_enter_names(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.loop_enter_names)
  return loop_enter_names_.Get(index);
}
::std::string* WhileContextDef::mutable_loop_enter_names(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.loop_enter_names)
  return loop_enter_names_.Mutable(index);
}
void WhileContextDef::set_loop_enter_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.loop_enter_names)
  loop_enter_names_.Mutable(index)->assign(value);
}
void WhileContextDef::set_loop_enter_names(int index, const char* value) {
  loop_enter_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.WhileContextDef.loop_enter_names)
}
void WhileContextDef::set_loop_enter_names(int index, const char* value, size_t size) {
  loop_enter_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.WhileContextDef.loop_enter_names)
}
::std::string* WhileContextDef::add_loop_enter_names() {
  // @@protoc_insertion_point(field_add_mutable:tensorflow.WhileContextDef.loop_enter_names)
  return loop_enter_names_.Add();
}
void WhileContextDef::add_loop_enter_names(const ::std::string& value) {
  loop_enter_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.WhileContextDef.loop_enter_names)
}
void WhileContextDef::add_loop_enter_names(const char* value) {
  loop_enter_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.WhileContextDef.loop_enter_names)
}
void WhileContextDef::add_loop_enter_names(const char* value, size_t size) {
  loop_enter_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.WhileContextDef.loop_enter_names)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
WhileContextDef::loop_enter_names() const {
  // @@protoc_insertion_point(field_list:tensorflow.WhileContextDef.loop_enter_names)
  return loop_enter_names_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
WhileContextDef::mutable_loop_enter_names() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.WhileContextDef.loop_enter_names)
  return &loop_enter_names_;
}

// optional .tensorflow.ValuesDef values_def = 9;
bool WhileContextDef::has_values_def() const {
  return this != internal_default_instance() && values_def_ != NULL;
}
void WhileContextDef::clear_values_def() {
  if (GetArenaNoVirtual() == NULL && values_def_ != NULL) delete values_def_;
  values_def_ = NULL;
}
const ::tensorflow::ValuesDef& WhileContextDef::values_def() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.values_def)
  return values_def_ != NULL ? *values_def_
                         : *::tensorflow::ValuesDef::internal_default_instance();
}
::tensorflow::ValuesDef* WhileContextDef::mutable_values_def() {
  
  if (values_def_ == NULL) {
    _slow_mutable_values_def();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.values_def)
  return values_def_;
}
::tensorflow::ValuesDef* WhileContextDef::release_values_def() {
  // @@protoc_insertion_point(field_release:tensorflow.WhileContextDef.values_def)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_values_def();
  } else {
    ::tensorflow::ValuesDef* temp = values_def_;
    values_def_ = NULL;
    return temp;
  }
}
 void WhileContextDef::set_allocated_values_def(::tensorflow::ValuesDef* values_def) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete values_def_;
  }
  if (values_def != NULL) {
    _slow_set_allocated_values_def(message_arena, &values_def);
  }
  values_def_ = values_def;
  if (values_def) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.WhileContextDef.values_def)
}

inline const WhileContextDef* WhileContextDef::internal_default_instance() {
  return &WhileContextDef_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)
